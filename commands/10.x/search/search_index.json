{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Drush is a command line shell and Unix scripting interface for Drupal. Drush core ships with lots of useful commands for interacting with code like modules/themes/profiles. Similarly, it runs update.php, executes SQL queries and DB migrations, and misc utilities like run cron or clear cache. Developers love the generate command, which jump starts your coding project by writing ready-to-customize PHP and YML files. Drush can be extended by 3rd party commandfiles . Resources Installing (and Upgrading) ( Drush 8 ) General Documentation ( Drush 8 ) Commands API Documentation Drush packages available via Composer A list of modules that include Drush integration Drush comes with a full test suite powered by PHPUnit . Each commit gets tested by our CI bots. Support Post support requests to Drupal Answers . Tag question with 'drush'. Report bugs and request features in the GitHub Drush Issue Queue . Use pull requests (PRs) to contribute to Drush. Code of Conduct The Drush project expects all participants to abide by the Drupal Code of Conduct . FAQ Q: What does \"Drush\" stand for? A: The Drupal Shell. Q: How do I pronounce Drush? A: Some people pronounce the dru with a long 'u' like Dr u pal. Fidelity points go to them, but they are in the minority. Most pronounce Drush so that it rhymes with hush, rush, flush, etc. This is the preferred pronunciation. Q: Does Drush have unit tests? A: Drush has an excellent suite of unit tests. See tests/README.md for more information. Credits Originally developed by Arto Bendiken for Drupal 4.7. Redesigned by Franz Heinzmann in May 2007 for Drupal 5. Maintained by Moshe Weitzman with much help from the folks listed at https://github.com/orgs/drush-ops/people. Thanks to JetBrains for supporting this project and open source software .","title":"Home"},{"location":"browse/","text":"browse Display a link to a given path or open link in a browser. Examples drush browse . Open default web browser (if configured or detected) to the site front page. drush browse node/1 . Open web browser to the path node/1. drush @example.prod . Open a browser to the web site specified in a site alias. drush browse --browser=firefox admin . Open Firefox web browser to the path 'admin'. Arguments path . Path to open. If omitted, the site front page will be opened. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --browser=BROWSER . Specify a particular browser (defaults to operating system default). Use --no-browser to suppress opening a browser. --redirect-port=REDIRECT-PORT . The port that the web server is redirected to (e.g. when running within a Vagrant environment).","title":"browse"},{"location":"cache_clear/","text":"cache:clear Clear a specific cache, or all Drupal caches. Examples drush cc bin entity,bootstrap . Clear the entity and bootstrap cache bins. Arguments type . The particular cache to clear. Omit this argument to choose from available types. args . Additional arguments as might be expected (e.g. bin name). Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: \"1\"] --no-cache-clear . Negate --cache-clear option. Aliases cc cache-clear","title":"cache:clear"},{"location":"cache_get/","text":"cache:get Fetch a cached object and display it. Examples drush cache:get hook_info bootstrap . Display the data for the cache id \"hook_info\" from the \"bootstrap\" bin. drush cache:get update_available_releases update . Display the data for the cache id \"update_available_releases\" from the \"update\" bin. Arguments cid . The id of the object to fetch. bin . The cache bin to fetch from. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"json\"] --fields=FIELDS . Available fields: Cache ID (cid), Data (data), Created (created), Expire (expire), Tags (tags), Checksum (checksum), Valid (valid) [default: \"cid,data,created,expire,tags\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases cg cache-get","title":"cache:get"},{"location":"cache_rebuild/","text":"cache:rebuild Rebuild a Drupal 8 site. This is a copy of core/rebuild.php. Additionally it also clears Drush cache and Drupal's render cache. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: \"1\"] --no-cache-clear . Negate --cache-clear option. Aliases cr rebuild cache-rebuild","title":"cache:rebuild"},{"location":"cache_set/","text":"cache:set Cache an object expressed in JSON or var_export() format. Arguments cid . The id of the object to set. data . The object to set in the cache. Use - to read the object from STDIN. bin . The cache bin to store the object in. expire . 'CACHE_PERMANENT', or a Unix timestamp. tags . A comma delimited list of cache tags. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --input-format[=INPUT-FORMAT] . The format of value. Use 'json' for complex values. [default: \"string\"] --cache-get . If the object is the result a previous fetch from the cache, only store the value in the 'data' property of the object in the cache. Aliases cs cache-set","title":"cache:set"},{"location":"cache_tags/","text":"cache:tags Invalidate by cache tags. Examples drush cache:tag node:12,user:4 . Purge content associated with two cache tags. Arguments tags . A comma delimited list of cache tags to clear. Aliases ct","title":"cache:tags"},{"location":"config_delete/","text":"config:delete Delete a configuration key, or a whole object. Examples drush config:delete system.site . Delete the the system.site config object. drush config:delete system.site page.front . Delete the 'page.front' key from the system.site object. Arguments config_name . The config object name, for example \"system.site\". key . A config key to clear, for example \"page.front\". Aliases cdel config-delete","title":"config:delete"},{"location":"config_edit/","text":"config:edit Open a config file in a text editor. Edits are imported after closing editor. Examples drush config:edit image.style.large . Edit the image style configurations. drush config:edit . Choose a config file to edit. drush --bg config-edit image.style.large . Return to shell prompt as soon as the editor window opens. Arguments config_name . The config object name, for example \"system.site\". Aliases cedit config-edit","title":"config:edit"},{"location":"config_export/","text":"config:export Export Drupal configuration to a directory. Examples drush config:export --destination . Export configuration; Save files in a backup directory named config-export. Arguments label . A config directory label (i.e. a key in $config_directories array in settings.php). Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --add . Run git add -p after exporting. This lets you choose which config changes to sync for commit. --commit . Run git add -A and git commit after exporting. This commits everything that was exported without prompting. --message=MESSAGE . Commit comment for the exported configuration. Optional; may only be used with --commit. --destination[=DESTINATION] . An arbitrary directory that should receive the exported files. A backup directory is used when no value is provided. --diff . Show preview as a diff, instead of a change list. --format[=FORMAT] . Aliases cex config-export","title":"config:export"},{"location":"config_get/","text":"config:get Display a config value, or a whole configuration object. Examples drush config:get system.site . Displays the system.site config. drush config:get system.site page.front . Gets system.site:page.front value. Arguments config_name . The config object name, for example \"system.site\". key . The config key, for example \"page.front\". Optional. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . [default: \"yaml\"] --source[=SOURCE] . The config storage source to read. Additional labels may be defined in settings.php. [default: \"active\"] --include-overridden . Apply module and settings.php overrides to values. Aliases cget config-get","title":"config:get"},{"location":"config_import/","text":"config:import Import config from a config directory. Arguments label . A config directory label (i.e. a key in \\$config_directories array in settings.php). Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --preview[=PREVIEW] . Deprecated. Format for displaying proposed changes. Recognized values: list, diff. [default: \"list\"] --source=SOURCE . An arbitrary directory that holds the configuration files. An alternative to label argument --partial . Allows for partial config imports from the source directory. Only updates and new configs will be processed with this flag (missing configs will not be deleted). No config transformation happens. --diff . Show preview as a diff. Aliases cim config-import","title":"config:import"},{"location":"config_pull/","text":"config:pull Export and transfer config from one environment to another. Examples drush config:pull @prod @stage . Export config from @prod and transfer to @stage. drush config:pull @prod @self --label=vcs . Export config from @prod and transfer to the 'vcs' config directory of current site. drush config:pull @prod @self:../config/sync . Export config to a custom directory. Relative paths are calculated from Drupal root. Arguments source . A site-alias or the name of a subdirectory within /sites whose config you want to copy from. destination . A site-alias or the name of a subdirectory within /sites whose config you want to replace. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --safe . Validate that there are no git uncommitted changes before proceeding --label[=LABEL] . A config directory label (i.e. a key in \\$config_directories array in settings.php). Defaults to 'sync' [default: \"sync\"] --runner[=RUNNER] . Where to run the rsync command; defaults to the local site. Can also be 'source' or 'destination' --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"null\"] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:aliases drush docs:config:exporting drush docs:output-formats-filters Aliases cpull config-pull","title":"config:pull"},{"location":"config_set/","text":"config:set Set config value directly. Does not perform a config import. Examples drush config:set system.site page.front '/path/to/page' . Sets the given URL path as value for the config item with key \"page.front\" of \"system.site\" config object. Arguments config_name . The config object name, for example \"system.site\". key . The config key, for example \"page.front\". value . The value to assign to the config key. Use '-' to read from STDIN. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --input-format[=INPUT-FORMAT] . Format to parse the object. Use \"string\" for string (default), and \"yaml\" for YAML. [default: \"string\"] --value=VALUE . The value to assign to the config key (if any). Aliases cset config-set","title":"config:set"},{"location":"config_status/","text":"config:status Display status of configuration (differences between the filesystem configuration and database configuration). Examples drush config:status . Display configuration items that need to be synchronized. drush config:status --state=Identical . Display configuration items that are in default state. drush config:status --state='Only in sync dir' --prefix=node.type. . Display all content types that would be created in active storage on configuration import. drush config:status --state=Any --format=list . List all config names. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --state[=STATE] . A comma-separated list of states to filter results. [default: \"Only in DB,Only in sync dir,Different\"] --prefix=PREFIX . Prefix The config prefix. For example, \"system\". No prefix will return all names in the system. --label=LABEL . A config directory label (i.e. a key in \\$config_directories array in settings.php). --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Name (name), State (state) [default: \"name,state\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases cst config-status","title":"config:status"},{"location":"core_cron/","text":"core:cron Run all cron hooks in all active modules for specified site. Topics drush docs:cron Aliases cron core-cron","title":"core:cron"},{"location":"core_edit/","text":"core:edit Edit drushrc, site alias, and Drupal settings.php files. Examples drush core:config . Pick from a list of config/alias/settings files. Open selected in editor. drush --bg core-config . Return to shell prompt as soon as the editor window opens. drush core:config etc . Edit the global configuration file. drush core:config demo.alia . Edit a particular alias file. drush core:config sett . Edit settings.php for the current Drupal site. drush core:config --choice=2 . Edit the second file in the choice list. Arguments filter . A substring for filtering the list of files. Omit this argument to choose from loaded files. Aliases conf config core-edit","title":"core:edit"},{"location":"core_init/","text":"core:init Enrich the bash startup file with bash aliases and a smart command prompt. Examples core-init --edit . Enrich Bash and open drush config file in editor. core-init --edit --bg . Return to shell prompt as soon as the editor window opens Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --edit . Open the new config file in an editor. --add-path[=ADD-PATH] . Always add Drush to the $PATH in the user's .bashrc file, even if it is already in the $PATH. Use --no-add-path to skip updating .bashrc with the Drush $PATH. Default is to update .bashrc only if Drush is not already in the $PATH. Aliases init core-init","title":"core:init"},{"location":"core_requirements/","text":"core:requirements Information about things that may be wrong in your Drupal installation. Examples drush core:requirements . Show all status lines from the Status Report admin page. drush core:requirements --severity=2 . Show only the red lines from the Status Report admin page. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --severity[=SEVERITY] . Only show status report messages with a severity greater than or equal to the specified value. [default: \"-1\"] --ignore[=IGNORE] . Comma-separated list of requirements to remove from output. Run with --format=yaml to see key values to use. --fields=FIELDS . Available fields: Title (title), Severity (severity), SID (sid), Description (description), Summary (value) [default: \"title,severity,value\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases status-report rq core-requirements","title":"core:requirements"},{"location":"core_rsync/","text":"core:rsync Rsync Drupal code or files to/from another server using ssh. Examples drush rsync @dev @stage . Rsync Drupal root from Drush alias dev to the alias stage. drush rsync ./ @stage:%files/img . Rsync all files in the current directory to the 'img' directory in the file storage folder on the Drush alias stage. drush rsync @dev @stage -- --exclude=*.sql --delete . Rsync Drupal root from the Drush alias dev to the alias stage, excluding all .sql files and delete all files on the destination that are no longer on the source. drush rsync @dev @stage --ssh-options=\"-o StrictHostKeyChecking=no\" -- --delete . Customize how rsync connects with remote host via SSH. rsync options like --delete are placed after a --. Arguments source . A site alias and optional path. See rsync documentation and example.site.yml. target . A site alias and optional path. See rsync documentation and example.site.yml.', extra . Additional parameters after the ssh statement. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --exclude-paths=EXCLUDE-PATHS . List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows). --include-paths=INCLUDE-PATHS . List of paths to include, seperated by : (Unix-based systems) or ; (Windows). --mode[=MODE] . The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz. [default: \"akz\"] Topics drush docs:aliases Aliases rsync core-rsync","title":"core:rsync"},{"location":"core_status/","text":"core:status An overview of the environment - Drush and Drupal. Examples drush core-status --field=files . Emit just one field, not all the default fields. drush core-status --fields=* . Emit all fields, not just the default ones. Arguments filter . A field to filter on. @deprecated - use --field option instead. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --project=PROJECT . A comma delimited list of projects. Their paths will be added to path-aliases section. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Drupal version (drupal-version), Site URI (uri), DB driver (db-driver), DB hostname (db-hostname), DB port (db-port), DB username (db-username), DB password (db-password), DB name (db-name), Database (db-status), Drupal bootstrap (bootstrap), Default theme (theme), Admin theme (admin-theme), PHP binary (php-bin), PHP config (php-conf), PHP OS (php-os), Drush script (drush-script), Drush version (drush-version), Drush temp (drush-temp), Drush cache folder (drush-cache-directory), Drush configs (drush-conf), Drush aliases (drush-alias-files), Alias search paths (alias-searchpaths), Install profile (install-profile), Drupal root (root), Drupal Settings (drupal-settings-file), Site path (site-path), Site path (site), Themes path (themes), Modules path (modules), Files, Public (files), Files, Private (private), Files, Temp (temp), Drupal config (config-sync), Files, Public (files-path), Files, Temp (temp-path), Other paths (%paths) [default: \"drupal-version,uri,db-driver,db-hostname,db-port,db-username,db-name,db-status,bootstrap,theme,admin-theme,php-bin,php-conf,php-os,drush-script,drush-version,drush-temp,drush-conf,install-profile,root,site,files,private,temp\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:readme drush docs:output-formats-filters Aliases status st core-status","title":"core:status"},{"location":"core_topic/","text":"core:topic Read detailed documentation on a given topic. Examples drush topic . Pick from all available topics. drush topic docs-repl . Show documentation for the Drush interactive shell drush docs:r . Filter topics for those starting with 'docs-r'. Arguments topic_name . The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis). Topics drush docs:readme Aliases topic core-topic","title":"core:topic"},{"location":"deploy/","text":"deploy Run several commands after performing a code deployment. Examples drush deploy -v -y . Run updates with verbose logging and accept all prompts. Topics drush docs:deploy","title":"deploy"},{"location":"deploy_hook-status/","text":"deploy:hook-status Prints information about pending deploy update hooks. Examples deploy:hook-status . Prints information about pending deploy hooks. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Module (module), Hook (hook), Description (description) [default: \"module,hook,description\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:deploy drush docs:output-formats-filters","title":"deploy:hook-status"},{"location":"deploy_hook/","text":"deploy:hook Run pending deploy update hooks. Examples deploy:hook . Run pending deploy hooks. Topics drush docs:deploy","title":"deploy:hook"},{"location":"drupal_directory/","text":"drupal:directory Return the filesystem path for modules/themes and other key folders. Examples cd drush dd devel . Navigate into the devel module directory cd drush dd . Navigate to the root of your Drupal site cd drush dd files . Navigate to the files directory. drush dd @alias:%files . Print the path to the files directory on the site @alias. edit drush dd devel /devel.module . Open devel module in your editor (customize 'edit' for your editor) Arguments target . A module/theme name, or special names like root, files, private, or an alias : path alias string such as @alias:%files. Defaults to root. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --local-only . Reject any target that specifies a remote site. --component[=COMPONENT] . The portion of the evaluated path to return. Defaults to 'path'; 'name' returns the site alias of the target. Aliases dd drupal-directory","title":"drupal:directory"},{"location":"entity_delete/","text":"entity:delete Delete content entities. To delete configuration entities, see config:delete command. Examples drush entity:delete node --bundle=article . Delete all article entities. drush entity:delete shortcut . Delete all shortcut entities. drush entity:delete node 22,24 . Delete nodes 22 and 24. drush entity:delete node --exclude=9,14,81 . Delete all nodes except node 9, 14 and 81. drush entity:delete user . Delete all users except uid=1. Arguments entity_type . An entity machine name. ids . A comma delimited list of Ids. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --bundle=BUNDLE . Restrict deletion to the specified bundle. Ignored when ids is specified. --exclude=EXCLUDE . Exclude certain entities from deletion. Ignored when ids is specified. Aliases edel entity-delete","title":"entity:delete"},{"location":"entity_updates/","text":"entity:updates Apply pending entity schema updates. Examples drush updatedb:status --entity-updates | grep entity-update . Use updatedb:status to detect pending updates. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: \"1\"] --no-cache-clear . Negate --cache-clear option. Aliases entup entity-updates","title":"entity:updates"},{"location":"generate/","text":"generate Generate boilerplate code for modules/plugins/services etc. Drush asks questions so that the generated code is as polished as possible. After generating, Drush lists the files that were created. Examples drush generate . Pick from available generators and then run it. drush generate controller . Generate a controller class for your module. drush generate drush-command-file . Generate a Drush commandfile for your module. Arguments generator . A generator name. Omit to pick from available Generators. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --answers=ANSWERS . A JSON string containing pairs of question and answers. --directory=DIRECTORY . Absolute path to a base directory for file writing. Topics drush docs:generators Aliases gen","title":"generate"},{"location":"help/","text":"help Display usage details for a command. Examples drush help pm-uninstall . Show help for a command. drush help pmu . Show help for a command using an alias. drush help --format=xml . Show all available commands in XML format. drush help --format=json . All available commands, in JSON format. Arguments command_name . A command name Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,tsv,var_dump,var_export,xml,yaml [default: \"helpcli\"] --include-field-labels . --table-style[=TABLE-STYLE] . [default: \"compact\"] Topics drush docs:readme","title":"help"},{"location":"image_derive/","text":"image:derive Create an image derivative. Examples drush image:derive thumbnail core/themes/bartik/screenshot.png . Save thumbnail sized derivative of logo image. Arguments style_name . An image style machine name. source . Path to a source image. Optionally prepend stream wrapper scheme. Aliases id image-derive","title":"image:derive"},{"location":"image_flush/","text":"image:flush Flush all derived images for a given style. Examples drush image:flush . Pick an image style and then delete its derivatives. drush image:flush thumbnail,large . Delete all thumbnail and large derivatives. drush image:flush --all . Flush all derived images. They will be regenerated on demand. Arguments style_names . A comma delimited list of image style machine names. If not provided, user may choose from a list of names. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --all . Flush all derived images Aliases if image-flush","title":"image:flush"},{"location":"jn_get/","text":"jn:get Execute a JSONAPI request. Examples drush jn:get jsonapi/node/article . Get a list of articles back as JSON. drush jn:get jsonapi/node/article | jq . Pretty print JSON by piping to jq. See https://stedolan.github.io/jq/ for lots more jq features. Arguments url . The JSONAPI URL to request. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: \"json\"] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'.","title":"jn:get"},{"location":"list/","text":"list List available commands. Examples drush list . List all commands. drush list --filter=devel_generate . Show only commands starting with devel- drush list --format=xml . List all commands in Symfony compatible xml format. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . [default: \"listcli\"] --raw . Show a simple table of command names and descriptions. --filter=FILTER . Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names.","title":"list"},{"location":"locale_check/","text":"locale:check Checks for available translation updates. Aliases locale-check","title":"locale:check"},{"location":"locale_export/","text":"locale:export Exports to a gettext translation file. See Drupal Core: \\Drupal\\locale\\Form\\ExportForm::submitForm Examples drush locale:export nl > nl.po . Export the Dutch translations with all types. drush locale:export nl --types=customized,not-customized > nl.po . Export the Dutch customized and not customized translations. drush locale:export --template > drupal.pot . Export the source strings only as template file for translation. Arguments langcode . The language code of the exported translations. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --template . POT file output of extracted source texts to be translated. --types[=TYPES] . String types to include, defaults to all types. Types: 'not-customized', 'customized', 'not-translated'. Aliases locale-export","title":"locale:export"},{"location":"locale_import/","text":"locale:import Imports to a gettext translation file. Examples drush locale-import nl drupal-8.4.2.nl.po . Import the Dutch drupal core translation. drush locale-import nl custom-translations.po --type=customized --override=all . Import customized Dutch translations and override any existing translation. Arguments langcode . The language code of the imported translations. file . Path and file name of the gettext file. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --type[=TYPE] . The type of translations to be imported, defaults to 'not-customized'. Options: - customized: Treat imported strings as custom translations. - not-customized: Treat imported strings as not-custom translations. --override[=OVERRIDE] . Whether and how imported strings will override existing translations. Defaults to the Import behavior configurred in the admin interface. Options: - none: Don't overwrite existing translations. Only append new translations. - customized: Only override existing customized translations. - not-customized: Only override non-customized translations, customized translations are kept. - all: Override any existing translation. Aliases locale-import","title":"locale:import"},{"location":"locale_update/","text":"locale:update Imports the available translation updates. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --langcodes=LANGCODES . A comma-separated list of language codes to update. If omitted, all translations will be updated. Aliases locale-update","title":"locale:update"},{"location":"php_cli/","text":"php:cli Open an interactive shell on a Drupal site. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --version-history . Use command history based on Drupal version (Default is per site). --cwd[=CWD] . Changes the working directory of the shell (Default is the project root directory) Topics drush docs:repl Aliases php core:cli core-cli","title":"php:cli"},{"location":"php_eval/","text":"php:eval Evaluate arbitrary php code after bootstrapping Drupal (if available). Examples drush php:eval 'variable_set(\"hello\", \"world\");' . Sets the hello variable using Drupal API.' drush php:eval '$node = node_load(1); print $node->title;' . Loads node with nid 1 and then prints its title. drush php:eval \"file_unmanaged_copy(\\'$HOME/Pictures/image.jpg\\', \\'public://image.jpg\\');\" . Copies a file whose path is determined by an environment\\'s variable. Note the use of double quotes so the variable $HOME gets replaced by its value. drush php:eval \"node_access_rebuild();\" . Rebuild node access permissions. Arguments code . PHP code Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . [default: \"var_export\"] Aliases eval ev php-eval","title":"php:eval"},{"location":"php_script/","text":"php:script Run php a script after a full Drupal bootstrap. A useful alternative to eval command when your php is lengthy or you can't be bothered to figure out bash quoting. If you plan to share a script with others, consider making a full Drush command instead, since that's more self-documenting. Drush provides commandline options to the script via a variable called $extra. Examples drush php:script example --script-path=/path/to/scripts:/another/path . Run a script named example.php from specified paths drush php:script - . Run PHP code from standard input. drush php:script . List all available scripts. drush php:script foo -- apple --cider . Run foo.php script with argument 'apple' and option 'cider'. Note the -- separator. Arguments extra . Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . [default: \"var_export\"] --script-path=SCRIPT-PATH . Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows). Aliases scr php-script","title":"php:script"},{"location":"pm_enable/","text":"pm:enable Enable one or more modules. Arguments modules . A comma delimited list of modules. Aliases en pm-enable","title":"pm:enable"},{"location":"pm_list/","text":"pm:list Show a list of available extensions (modules and themes). Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --type[=TYPE] . Only show extensions having a given type. Choices: module, theme. [default: \"module,theme\"] --status[=STATUS] . Only show extensions having a given status. Choices: enabled or disabled. [default: \"enabled,disabled\"] --package=PACKAGE . Only show extensions having a given project packages (e.g. Development). --core . Only show extensions that are in Drupal core. --no-core . Only show extensions that are not provided by Drupal core. --fields=FIELDS . Available fields: Package (package), Name (display_name), Name (name), Type (type), Path (path), Status (status), Version (version) [default: \"package,display_name,status,version\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases pml pm-list","title":"pm:list"},{"location":"pm_security/","text":"pm:security Check Drupal Composer packages for pending security updates. This uses the Drupal security advisories package to determine if updates are available. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Name (name), Installed Version (version) [default: \"name,version\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases sec pm-security","title":"pm:security"},{"location":"pm_uninstall/","text":"pm:uninstall Uninstall one or more modules and their dependent modules. Arguments modules . A comma delimited list of modules. Aliases pmu pm-uninstall","title":"pm:uninstall"},{"location":"queue_delete/","text":"queue:delete Delete all items in a specific queue. Arguments name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info. Aliases queue-delete","title":"queue:delete"},{"location":"queue_list/","text":"queue:list Returns a list of all defined queues. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Queue (queue), Items (items), Class (class) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases queue-list","title":"queue:list"},{"location":"queue_run/","text":"queue:run Run a specific queue by name. Arguments name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --time-limit=TIME-LIMIT . The maximum number of seconds allowed to run the queue --items-limit[=ITEMS-LIMIT] . The maximum number of items allowed to run the queue Aliases queue-run","title":"queue:run"},{"location":"role_create/","text":"role:create Create a new role. Examples drush role:create 'test role' . Create a new role 'test role'. On D8, the human-readable name will be 'Test role'. drush role:create 'test role' 'Test role' . Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'. Arguments machine_name . The symbolic machine name for the role. human_readable_name . A descriptive name for the role. Aliases rcrt role-create","title":"role:create"},{"location":"role_delete/","text":"role:delete Delete a new role. Examples drush role:delete 'test role' . Delete the role 'test role'. Arguments machine_name . The symbolic machine name for the role. Aliases rdel role-delete","title":"role:delete"},{"location":"role_list/","text":"role:list Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed. Examples drush role:list --filter='administer nodes' . Display a list of roles that have the administer nodes permission assigned. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"yaml\"] --fields=FIELDS . Available fields: ID (rid), Role Label (label), Permissions (perms) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases rls role-list","title":"role:list"},{"location":"role_perm_add/","text":"role:perm:add Grant specified permission(s) to a role. Examples drush role-add-perm anonymous 'post comments' . Allow anon users to post comments. drush role:add-perm anonymous \"'post comments','access content'\" . Allow anon users to post comments and access content. drush pm:info --fields=permissions --format=csv aggregator . Discover the permissions associated with given module (then use this command as needed). Arguments machine_name . The role to modify. permissions . The list of permission to grant, delimited by commas. Aliases rap role-add-perm","title":"role:perm:add"},{"location":"role_perm_remove/","text":"role:perm:remove Remove specified permission(s) from a role. Examples drush role:remove-perm anonymous 'access content' . Hide content from anon users. Arguments machine_name . The role to modify. permissions . The list of permission to grant, delimited by commas. Aliases rmp role-remove-perm","title":"role:perm:remove"},{"location":"runserver/","text":"runserver Runs PHP's built-in http server for development. Don't use this for production, it is neither scalable nor secure for this use. If you run multiple servers simultaneously, you will need to assign each a unique port. Use Ctrl-C or equivalent to stop the server when complete. Examples drush rs 8080 . Start a web server on 127.0.0.1, port 8080. drush rs 10.0.0.28:80 . Start runserver on 10.0.0.28, port 80. drush rs [::1]:80 . Start runserver on IPv6 localhost ::1, port 80. drush rs --dns localhost:8888/user . Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser. drush rs / . Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser. drush rs --default-server=127.0.0.1:8080/ - . Use a default (would be specified in your drushrc) that starts runserver on port 8080, and opens a browser to the front page. Set path to a single hyphen path in argument to prevent opening browser for this session. drush rs :9000/admin . Start runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP. drush --quiet rs . Silence logging the printing of web requests to the console. Arguments uri . Host IP address and port number to bind to and path to open in web browser. Format is addr:port/path. Only opens a browser if a path is specified. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --default-server=DEFAULT-SERVER . A default addr:port/path to use for any values not specified as an argument. --browser[=BROWSER] . If opening a web browser, which browser to use (defaults to operating system default). Use --no-browser to avoid opening a browser. [default: \"1\"] --dns . Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser. --no-browser . Negate --browser option. Aliases rs serve","title":"runserver"},{"location":"site_alias-convert/","text":"site:alias-convert Convert legacy site alias files to the new yml format. Examples drush site:alias-convert . Find legacy alias files and convert them to yml. You will be prompted for a destination directory. drush site:alias-convert --simulate . List the files to be converted but do not actually do anything. Arguments destination . An absolute path to a directory for writing new alias files.If omitted, user will be prompted. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . [default: \"yaml\"] --sources=SOURCES . A comma delimited list of paths to search. Overrides the default paths. Aliases sa-convert sac","title":"site:alias-convert"},{"location":"site_alias/","text":"site:alias Show site alias details, or a list of available site aliases. Examples drush site:alias . List all alias records known to drush. drush site:alias @dev . Print an alias record for the alias 'dev'. Arguments site . Site alias or site specification. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: \"yaml\"] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:aliases drush docs:output-formats-filters Aliases sa","title":"site:alias"},{"location":"site_install/","text":"site:install Install Drupal along with modules/themes/configuration/profile. Examples drush si expert --locale=uk . (Re)install using the expert install profile. Set default language to Ukrainian. drush si --db-url=mysql://root:pass@localhost:port/dbname . Install using the specified DB params. drush si --db-url=sqlite://sites/example.com/files/.ht.sqlite . Install using SQLite drush si --account-pass=mom . Re-install with specified uid1 password. drush si --existing-config . Install based on the yml files stored in the config export/import directory. drush si standard install_configure_form.enable_update_status_emails=NULL . Disable email notification during install and later. If your server has no mail transfer agent, this gets rid of an error during install. Arguments profile . An install profile name. Defaults to 'standard' unless an install profile is marked as a distribution. Additional info for the install profile may also be provided with additional arguments. The key is in the form [form name].[parameter name] Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --db-url=DB-URL . A Drupal 6 style database URL. Required for initial install, not re-install. If omitted and required, Drush prompts for this item. --db-prefix=DB-PREFIX . An optional table prefix to use for initial install. --db-su=DB-SU . Account to use when creating a new database. Must have Grant permission (mysql only). Optional. --db-su-pw=DB-SU-PW . Password for the \"db-su\" account. Optional. --account-name[=ACCOUNT-NAME] . uid1 name. Defaults to admin [default: \"admin\"] --account-mail[=ACCOUNT-MAIL] . uid1 email. Defaults to admin@example.com [default: \"admin@example.com\"] --site-mail[=SITE-MAIL] . From: for system mailings. Defaults to admin@example.com [default: \"admin@example.com\"] --account-pass=ACCOUNT-PASS . uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in config.yml. --locale[=LOCALE] . A short language code. Sets the default site language. Language files must already be present. [default: \"en\"] --site-name[=SITE-NAME] . Defaults to Site-Install [default: \"Drush Site-Install\"] --site-pass=SITE-PASS . --sites-subdir=SITES-SUBDIR . Name of directory under 'sites' which should be created. --config-dir=CONFIG-DIR . Deprecated - only use with Drupal 8.5-. A path pointing to a full set of configuration which should be installed during installation. --existing-config . Configuration from \"sync\" directory should be imported during installation. Use with Drupal 8.6+. Aliases si sin site-install","title":"site:install"},{"location":"site_set/","text":"site:set Set a site alias that will persist for the current session. Stores the site alias being used in the current session in a temporary file. Examples drush site:set @dev . Set the current session to use the @dev alias. drush site:set user@server/path/to/drupal#sitename . Set the current session to use a remote site via site specification. drush site:set /path/to/drupal#sitename . Set the current session to use a local site via site specification. drush site:set - . Go back to the previously-set site (like cd - ). drush site:set . Without an argument, any existing site becomes unset. Arguments site . Site specification to use, or \"-\" for previous site. Omit this argument to unset. Aliases use site-set","title":"site:set"},{"location":"site_ssh/","text":"site:ssh Connect to a Drupal site's server via SSH, and optionally run a shell command. Examples drush @mysite ssh . Open an interactive shell on @mysite's server. drush @prod ssh ls /tmp . Run \"ls /tmp\" on @prod site. drush @prod ssh git pull . Run \"git pull\" on the Drupal root directory on the @prod site. drush ssh git pull . Run \"git pull\" on the local Drupal root directory. Arguments args . Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --cd=CD . Directory to change to. Defaults to Drupal root. --tty . Topics drush docs:aliases Aliases ssh site-ssh","title":"site:ssh"},{"location":"sql_cli/","text":"sql:cli Open a SQL command-line interface using Drupal's credentials. Examples drush sql:cli . Open a SQL command-line interface using Drupal's credentials. drush sql:cli --extra=--progress-reports . Open a SQL CLI and skip reading table information. drush sql:cli < example.sql . Import sql statements from a file into the current database. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --extra=EXTRA . Add custom options to the connect string Aliases sqlc sql-cli","title":"sql:cli"},{"location":"sql_connect/","text":"sql:connect A string for connecting to the DB. Examples drush sql-connect < example.sql . Bash: Import SQL statements from a file into the current database. eval (drush sql-connect) < example.sql . Fish: Import SQL statements from a file into the current database. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) Aliases sql-connect","title":"sql:connect"},{"location":"sql_create/","text":"sql:create Create a database. Examples drush sql:create . Create the database for the current site. drush @site.test sql-create . Create the database as specified for @site.test. drush sql:create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql://drupal_db_user:drupal_db_password@127.0.0.1/drupal_db\" . Create the database as specified in the db-url option. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --db-su=DB-SU . Account to use when creating a new database. --db-su-pw=DB-SU-PW . Password for the db-su account. Aliases sql-create","title":"sql:create"},{"location":"sql_drop/","text":"sql:drop Drop all tables in a given database. Topics drush docs:policy Aliases sql-drop","title":"sql:drop"},{"location":"sql_dump/","text":"sql:dump Exports the Drupal DB as SQL using mysqldump or equivalent. Examples drush sql:dump --result-file=../18.sql . Save SQL dump to the directory above Drupal root. drush sql:dump --skip-tables-key=common . Skip standard tables. @see example.drush.yml drush sql:dump --extra-dump=--no-data . Pass extra option to mysqldump command. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --result-file=RESULT-FILE . Save to a file. The file should be relative to Drupal root. If --result-file is provided with the value 'auto', a date-based filename will be created under ~/drush-backups directory. --create-db . Omit DROP TABLE statements. Used by Postgres and Oracle only. --data-only . Dump data without statements to create any of the schema. --ordered-dump . Order by primary key and add line breaks for efficient diffs. Slows down the dump. Mysql only. --gzip . Compress the dump using the gzip program which must be in your $PATH. --extra=EXTRA . Add custom arguments/options when connecting to database (used internally to list tables). --extra-dump=EXTRA-DUMP . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"null\"] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases sql-dump","title":"sql:dump"},{"location":"sql_query/","text":"sql:query Execute a query against a database. Examples drush sql:query \"SELECT * FROM users WHERE uid=1\" . Browse user record. Table prefixes, if used, must be added to table names by hand. drush sql:query --db-prefix \"SELECT * FROM {users}\" . Browse user record. Table prefixes are honored. Caution: All curly-braces will be stripped. drush sql-connect < example.sql . Import sql statements from a file into the current database. drush sql:query --file=example.sql . Alternate way to import sql statements from a file. drush @d8 ev \"return db_query('SELECT * FROM users')->fetchAll()\" --format=json . Get data back in JSON format. See https://github.com/drush-ops/drush/issues/3071#issuecomment-347929777. Arguments query . An SQL query. Ignored if --file is provided. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --result-file[=RESULT-FILE] . Save to a file. The file should be relative to Drupal root. --file=FILE . Path to a file containing the SQL to be run. Gzip files are accepted. --file-delete . Delete the --file after running it. --extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) --db-prefix . Enable replacement of braces in your query. Aliases sqlq sql-query","title":"sql:query"},{"location":"sql_sanitize/","text":"sql:sanitize Sanitize the database by removing or obfuscating user data. Commandfiles may add custom operations by implementing: - @hook_on-event sql-sanitize-message Display summary to user before confirmation. - @hook post-command sql-sanitize Run queries or call APIs to perform sanitizing Examples drush sql:sanitize --sanitize-password=no . Sanitize database without modifying any passwords. drush sql:sanitize --allowlist-fields=field_biography,field_phone_number . Sanitizes database but exempts two user fields from modification. Aliases sqlsan sql-sanitize","title":"sql:sanitize"},{"location":"sql_sync/","text":"sql:sync Copy DB data from a source site to a target site. Transfers data via rsync. Examples drush sql:sync @source @self . Copy the database from the site with the alias 'source' to the local site. drush sql:sync @self @target . Copy the database from the local site to the site with the alias 'target'. drush sql:sync #prod #dev . Copy the database from the site in /sites/prod to the site in /sites/dev (multisite installation). Arguments source . A site-alias or the name of a subdirectory within /sites whose database you want to copy from. target . A site-alias or the name of a subdirectory within /sites whose database you want to replace. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --no-dump . Do not dump the sql database; always use an existing dump file. --no-sync . Do not rsync the database dump file from source to target. --runner=RUNNER . Where to run the rsync command; defaults to the local site. Can also be 'source' or 'target'. --create-db . Create a new database before importing the database dump on the target machine. --db-su=DB-SU . Account to use when creating a new database (e.g. root). --db-su-pw=DB-SU-PW . Password for the db-su account. --target-dump=TARGET-DUMP . The path for storing the sql-dump on target machine. --source-dump[=SOURCE-DUMP] . The path for retrieving the sql-dump on source machine. --extra-dump[=EXTRA-DUMP] . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). Topics drush docs:aliases drush docs:policy drush docs:configuration drush docs:example-sync-via-http Aliases sql-sync","title":"sql:sync"},{"location":"state_delete/","text":"state:delete Delete a state entry. Examples drush state:del system.cron_last . Delete state entry for system.cron_last. Arguments key . The state key, for example \"system.cron_last\". Aliases sdel state-delete","title":"state:delete"},{"location":"state_get/","text":"state:get Display a state value. Examples drush state:get system.cron_last . Displays last cron run timestamp drush state:get drupal_css_cache_files --format=yaml . Displays an array of css files in yaml format. Arguments key . The key name. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"string\"] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Aliases sget state-get","title":"state:get"},{"location":"state_set/","text":"state:set Set a state value. Examples drush sset system.maintenance_mode 1 --input-format=integer . Put site into Maintenance mode. drush state:set system.cron_last 1406682882 --input-format=integer . Sets a timestamp for last cron run. php -r \"print json_encode(array(\\'drupal\\', \\'simpletest\\'));\" | drush state-set --input-format=json foo.name - . Set a key to a complex value (e.g. array) Arguments key . The state key, for example: system.cron_last. value . The value to assign to the state key. Use '-' to read from STDIN. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --input-format[=INPUT-FORMAT] . Type for the value. Defaults to 'auto'. Other recognized values: string, integer, float, boolean, json, yaml. [default: \"auto\"] --value=VALUE . For internal use only. Aliases sset state-set","title":"state:set"},{"location":"theme_enable/","text":"theme:enable Enable one or more themes. Arguments themes . A comma delimited list of themes. Aliases then theme-enable","title":"theme:enable"},{"location":"theme_uninstall/","text":"theme:uninstall Uninstall theme. Arguments themes . A comma delimited list of themes. Aliases thun theme-uninstall","title":"theme:uninstall"},{"location":"twig_compile/","text":"twig:compile Compile all Twig template(s). Aliases twigc twig-compile","title":"twig:compile"},{"location":"twig_unused/","text":"twig:unused Find potentially unused Twig templates. Immediately before running this command, crawl your entire web site. Or use your Production PHPStorage dir for comparison. Examples drush twig:unused --field=template /var/www/mass.local/docroot/modules/custom,/var/www/mass.local/docroot/themes/custom . Output a simple list of potentially unused templates. Arguments searchpaths . A comma delimited list of paths to recursively search Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Template (template), Compiled (compiled) [default: \"template,compiled\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters","title":"twig:unused"},{"location":"updatedb/","text":"updatedb Apply any database updates required (as with running update.php). Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --cache-clear[=CACHE-CLEAR] . Clear caches upon completion. [default: \"1\"] --entity-updates . Run automatic entity schema updates at the end of any update hooks. Not supported in Drupal >= 8.7.0. --post-updates[=POST-UPDATES] . Run post updates after hook_update_n and entity updates. [default: \"1\"] --no-cache-clear . Negate --cache-clear option. --no-post-updates . Negate --post-updates option. Aliases updb","title":"updatedb"},{"location":"updatedb_status/","text":"updatedb:status List any pending database updates. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --entity-updates[=ENTITY-UPDATES] . Show entity schema updates. [default: \"1\"] --post-updates[=POST-UPDATES] . Show post updates. [default: \"1\"] --no-entity-updates . Negate --entity-updates option. --no-post-updates . Negate --post-updates option. --fields=FIELDS . Available fields: Module (module), Update ID (update_id), Description (description), Type (type) [default: \"module,update_id,type,description\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases updbst updatedb-status","title":"updatedb:status"},{"location":"user_block/","text":"user:block Block the specified user(s). Examples drush user:block user3 . Block the users whose name is user3 Arguments names . A comma delimited list of user names. Aliases ublk user-block","title":"user:block"},{"location":"user_cancel/","text":"user:cancel Cancel user account(s) with the specified name(s). Examples drush user:cancel username . Cancel the user account with the name username and anonymize all content created by that user. drush user:cancel --delete-content username . Delete the user account with the name username and delete all content created by that user. Arguments names . A comma delimited list of user names. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --delete-content . Delete the user, and all content created by the user Aliases ucan user-cancel","title":"user:cancel"},{"location":"user_create/","text":"user:create Create a user account. Examples drush user:create newuser --mail=\"person@example.com\" --password=\"letmein\" . Create a new user account with the name newuser, the email address person@example.com, and the password letmein Arguments name . The name of the account to add Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --password=PASSWORD . The password for the new account --mail=MAIL . The email address for the new account Aliases ucrt user-create","title":"user:create"},{"location":"user_information/","text":"user:information Print information about the specified user(s). Examples drush user:information someguy,somegal . Display information about the someguy and somegal user accounts. drush user:information --mail=someguy@somegal.com . Display information for a given email account. drush user:information --uid=5 . Display information for a given user id. Arguments names . A comma delimited list of user names. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --uid=UID . A comma delimited list of user ids to lookup (an alternative to names). --mail=MAIL . A comma delimited list of emails to lookup (an alternative to names). --fields=FIELDS . Available fields: User ID (uid), User name (name), Password (pass), User mail (mail), User theme (theme), Signature (signature), Signature format (signature_format), User created (user_created), Created (created), User last access (user_access), Last access (access), User last login (user_login), Last login (login), User status (user_status), Status (status), Time zone (timezone), User picture (picture), Initial user mail (init), User roles (roles), Group Audience (group_audience), Language code (langcode), Uuid (uuid) [default: \"uid,name,mail,roles,user_status\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases uinf user-information","title":"user:information"},{"location":"user_login/","text":"user:login Display a one time login link for user ID 1, or another user. Examples drush user:login . Open default web browser and browse to homepage, logged in as uid=1. drush user:login --name=ryan node/add/blog . Open default web browser (if configured or detected) for a one-time login link for username ryan that redirects to node/add/blog. drush user:login --uid=123 . Open default web browser and login as user with uid \"123\". drush user:login --mail=foo@bar.com . Open default web browser and login as user with mail \"foo@bar.com\". drush user:login --browser=firefox --name=$(drush user:information --mail=\"drush@example.org\" --fields=name --format=string) . Open firefox web browser, and login as the user with the e-mail address drush@example.org. Arguments path . Optional path to redirect to after logging in. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --name[=NAME] . A user name to log in as. --uid[=UID] . A uid to log in as. --mail[=MAIL] . A user mail address to log in as. --browser[=BROWSER] . Optional value denotes which browser to use (defaults to operating system default). Use --no-browser to suppress opening a browser. [default: \"1\"] --redirect-port=REDIRECT-PORT . A custom port for redirecting to (e.g., when running within a Vagrant environment) --no-browser . Negate --browser option. Aliases uli user-login","title":"user:login"},{"location":"user_password/","text":"user:password Set the password for the user account with the specified name. Examples drush user:password someuser \"correct horse battery staple\" . Set the password for the username someuser. @see xkcd.com/936 Arguments name . The name of the account to modify. password . The new password for the account. Aliases upwd user-password","title":"user:password"},{"location":"user_role_add/","text":"user:role:add Add a role to the specified user accounts. Examples drush user-add-role \"power user\" user3 . Add the \"power user\" role to user3 Arguments role . The name of the role to add. names . A comma delimited list of user names. Aliases urol user-add-role","title":"user:role:add"},{"location":"user_role_remove/","text":"user:role:remove Remove a role from the specified user accounts. Examples drush user:remove-role \"power user\" user3 . Remove the \"power user\" role from user3 Arguments role . The name of the role to add names . A comma delimited list of user names. Aliases urrol user-remove-role","title":"user:role:remove"},{"location":"user_unblock/","text":"user:unblock UnBlock the specified user(s). Examples drush user:unblock user3 . Unblock the users with name user3 Arguments names . A comma delimited list of user names. Aliases uublk user-unblock","title":"user:unblock"},{"location":"version/","text":"version Show Drush version. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Drush version (drush-version) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters","title":"version"},{"location":"views_analyze/","text":"views:analyze Get a list of all Views and analyze warnings. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Type (type), Message (message) --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases va views-analyze","title":"views:analyze"},{"location":"views_dev/","text":"views:dev Set several Views settings to more developer-oriented values. Aliases vd views-dev","title":"views:dev"},{"location":"views_disable/","text":"views:disable Disable the specified views. Examples drush vdis frontpage taxonomy_term . Disable the frontpage and taxonomy_term views. Arguments views . A comma delimited list of view names. Aliases vdis views-disable","title":"views:disable"},{"location":"views_enable/","text":"views:enable Enable the specified views. Examples drush ven frontpage,taxonomy_term . Enable the frontpage and taxonomy_term views. Arguments views . A comma delimited list of view names. Aliases ven views-enable","title":"views:enable"},{"location":"views_execute/","text":"views:execute Execute a view and show a count of the results, or the rendered HTML. Examples drush views:execute my_view . Show the rendered HTML for the default display for the my_view View. drush views:execute my_view page_1 3 --count . Show a count of my_view:page_1 where the first contextual filter value is 3. drush views:execute my_view page_1 3,foo . Show the rendered HTML of my_view:page_1 where the first two contextual filter values are 3 and 'foo' respectively. Arguments view_name . The name of the view to execute. display . The display ID to execute. If none specified, the default display will be used. view_args . A comma delimited list of values, corresponding to contextual filters. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --count[=COUNT] . Display a count of the results instead of each row. --show-admin-links . Show contextual admin links in the rendered markup. Aliases vex views-execute","title":"views:execute"},{"location":"views_list/","text":"views:list Get a list of all views in the system. Examples drush vl . Show a list of all available views. drush vl --name=blog . Show a list of views which names contain 'blog'. drush vl --tags=tag1,tag2 . Show a list of views tagged with 'tag1' or 'tag2'. drush vl --status=enabled . Show a list of enabled views. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --name=NAME . A string contained in the view's name to filter the results with. --tags=TAGS . A comma-separated list of views tags by which to filter the results. --status=STATUS . Filter views by status. Choices: enabled, disabled. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --fields=FIELDS . Available fields: Machine name (machine-name), Name (label), Description (description), Status (status), Tag (tag) [default: \"machine-name,label,description,status\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases vl views-list","title":"views:list"},{"location":"watchdog_delete/","text":"watchdog:delete Delete watchdog log records. Examples drush watchdog:delete all . Delete all messages. drush watchdog:delete 64 . Delete messages with id 64. drush watchdog:delete \"cron run succesful\" . Delete messages containing the string \"cron run succesful\". drush watchdog:delete --severity=notice . Delete all messages with a severity of notice. drush watchdog:delete --type=cron . Delete all messages of type cron. Arguments substring . Delete all log records with this text in the messages. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --severity=SEVERITY . Delete messages of a given severity level. --type=TYPE . Delete messages of a given type. Aliases wd-del wd-delete wd watchdog-delete","title":"watchdog:delete"},{"location":"watchdog_list/","text":"watchdog:list Interactively filter the watchdog message listing. Examples drush watchdog:list . Prompt for message type or severity, then run watchdog-show. Arguments substring . A substring to look search in error messages. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --count[=COUNT] . The number of messages to show. Defaults to 10. [default: \"10\"] --extended . Return extended information about each message. --severity[=SEVERITY] . Restrict to messages of a given severity level. --type[=TYPE] . Restrict to messages of a given type. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: \"wid,date,type,severity,message\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases wd-list watchdog-list","title":"watchdog:list"},{"location":"watchdog_show-one/","text":"watchdog:show-one Show one log record by ID. Arguments id . Watchdog Id Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: \"yaml\"] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Aliases wd-one watchdog-show-one","title":"watchdog:show-one"},{"location":"watchdog_show/","text":"watchdog:show Show watchdog messages. Examples drush watchdog:show . Show a listing of most recent 10 messages. drush watchdog:show \"cron run succesful\" . Show a listing of most recent 10 messages containing the string \"cron run succesful\". drush watchdog:show --count=46 . Show a listing of most recent 46 messages. drush watchdog:show --severity=Notice . Show a listing of most recent 10 messages with a severity of notice. drush watchdog:show --type=php . Show a listing of most recent 10 messages of type php while sleep 2; do drush watchdog:show; done . Every 2 seconds, show the most recent 10 messages. Arguments substring . A substring to look search in error messages. Options Tip An option value without square brackets is mandatory. Any default value is listed at description end. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: \"table\"] --count[=COUNT] . The number of messages to show. Defaults to 10. [default: \"10\"] --severity=SEVERITY . Restrict to messages of a given severity level. --type=TYPE . Restrict to messages of a given type. --extended . Return extended information about each message. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: \"wid,date,type,severity,message\"] --field=FIELD . Select just one field, and force format to 'string'. Topics drush docs:output-formats-filters Aliases wd-show ws watchdog-show","title":"watchdog:show"}]}