{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Drush is a command line shell and Unix scripting interface for Drupal. Drush core ships with lots of useful commands for interacting with code like modules/themes/profiles. Similarly, it runs update.php, executes SQL queries and DB migrations, and misc utilities like run cron or clear cache. Developers love the generate command , which jump starts your coding project by writing ready-to-customize PHP and YML files. Drush can be extended by 3rd party commandfiles . Resources \u00b6 Installing and Upgrading ( Drush 8 ) General Documentation ( Drush 8 ) Drush Commands API Documentation Drush packages available via Composer A list of modules that include Drush integration Drush comes with a full test suite powered by PHPUnit . Each commit gets tested by our CI bots. Support \u00b6 Post support requests to Drupal Answers . Tag question with 'drush'. Report bugs and request features in the GitHub Drush Issue Queue . Use pull requests (PRs) to contribute to Drush. Code of Conduct \u00b6 The Drush project expects all participants to abide by the Drupal Code of Conduct . FAQ \u00b6 Q: What does \"Drush\" stand for? A: The Drupal Shell. Q: How do I pronounce Drush? A: Some people pronounce the dru with a long 'u' like Dr u pal. Fidelity points go to them, but they are in the minority. Most pronounce Drush so that it rhymes with hush, rush, flush, etc. This is the preferred pronunciation. Q: Does Drush have unit tests? A: Drush has an excellent suite of unit tests. See tests/README.md for more information. Credits \u00b6 Originally developed by Arto Bendiken for Drupal 4.7. Redesigned by Franz Heinzmann in May 2007 for Drupal 5. Maintained by Moshe Weitzman with much help from the folks listed at https://github.com/orgs/drush-ops/people . Thanks to JetBrains for supporting this project and open source software .","title":"Home"},{"location":"#resources","text":"Installing and Upgrading ( Drush 8 ) General Documentation ( Drush 8 ) Drush Commands API Documentation Drush packages available via Composer A list of modules that include Drush integration Drush comes with a full test suite powered by PHPUnit . Each commit gets tested by our CI bots.","title":"Resources"},{"location":"#support","text":"Post support requests to Drupal Answers . Tag question with 'drush'. Report bugs and request features in the GitHub Drush Issue Queue . Use pull requests (PRs) to contribute to Drush.","title":"Support"},{"location":"#code-of-conduct","text":"The Drush project expects all participants to abide by the Drupal Code of Conduct .","title":"Code of Conduct"},{"location":"#faq","text":"Q: What does \"Drush\" stand for? A: The Drupal Shell. Q: How do I pronounce Drush? A: Some people pronounce the dru with a long 'u' like Dr u pal. Fidelity points go to them, but they are in the minority. Most pronounce Drush so that it rhymes with hush, rush, flush, etc. This is the preferred pronunciation. Q: Does Drush have unit tests? A: Drush has an excellent suite of unit tests. See tests/README.md for more information.","title":"FAQ"},{"location":"#credits","text":"Originally developed by Arto Bendiken for Drupal 4.7. Redesigned by Franz Heinzmann in May 2007 for Drupal 5. Maintained by Moshe Weitzman with much help from the folks listed at https://github.com/orgs/drush-ops/people . Thanks to JetBrains for supporting this project and open source software .","title":"Credits"},{"location":"browse/","text":"browse \u00b6 Display a link to a given path or open link in a browser. Examples \u00b6 drush browse . Open default web browser (if configured or detected) to the site front page. drush browse node/1 . Open web browser to the path node/1. drush @example.prod . Open a browser to the web site specified in a site alias. drush browse --browser=firefox admin . Open Firefox web browser to the path 'admin'. Arguments \u00b6 [--path] . Path to open. If omitted, the site front page will be opened. Options \u00b6 --browser=BROWSER . Specify a particular browser (defaults to OS default). Use --no-browser to suppress opening a browser. --redirect-port=REDIRECT-PORT . The port that the web server is redirected to (e.g. when running within a Vagrant environment). Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"browse"},{"location":"browse/#browse","text":"Display a link to a given path or open link in a browser.","title":"browse"},{"location":"browse/#examples","text":"drush browse . Open default web browser (if configured or detected) to the site front page. drush browse node/1 . Open web browser to the path node/1. drush @example.prod . Open a browser to the web site specified in a site alias. drush browse --browser=firefox admin . Open Firefox web browser to the path 'admin'.","title":"Examples"},{"location":"browse/#arguments","text":"[--path] . Path to open. If omitted, the site front page will be opened.","title":"Arguments"},{"location":"browse/#options","text":"--browser=BROWSER . Specify a particular browser (defaults to OS default). Use --no-browser to suppress opening a browser. --redirect-port=REDIRECT-PORT . The port that the web server is redirected to (e.g. when running within a Vagrant environment). Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Options"},{"location":"cache_clear/","text":"cache:clear \u00b6 Clear a specific cache, or all Drupal caches. Examples \u00b6 drush cc bin entity,bootstrap . Clear the entity and bootstrap cache bins. Arguments \u00b6 --type . The particular cache to clear. Omit this argument to choose from available types. [--args]... . Additional arguments as might be expected (e.g. bin name). Options \u00b6 --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option. Aliases \u00b6 cc cache-clear Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"cache:clear"},{"location":"cache_clear/#cacheclear","text":"Clear a specific cache, or all Drupal caches.","title":"cache:clear"},{"location":"cache_clear/#examples","text":"drush cc bin entity,bootstrap . Clear the entity and bootstrap cache bins.","title":"Examples"},{"location":"cache_clear/#arguments","text":"--type . The particular cache to clear. Omit this argument to choose from available types. [--args]... . Additional arguments as might be expected (e.g. bin name).","title":"Arguments"},{"location":"cache_clear/#options","text":"--cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option.","title":"Options"},{"location":"cache_clear/#aliases","text":"cc cache-clear Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"cache_get/","text":"cache:get \u00b6 Fetch a cached object and display it. Examples \u00b6 drush cache:get hook_info bootstrap . Display the data for the cache id \"hook_info\" from the \"bootstrap\" bin. drush cache:get update_available_releases update . Display the data for the cache id \"update_available_releases\" from the \"update\" bin. Arguments \u00b6 --cid . The id of the object to fetch. [--bin] . The cache bin to fetch from. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: json ] --fields=FIELDS . Available fields: Cache ID (cid), Data (data), Created (created), Expire (expire), Tags (tags), Checksum (checksum), Valid (valid) [default: cid,data,created,expire,tags ] --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 cg cache-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"cache:get"},{"location":"cache_get/#cacheget","text":"Fetch a cached object and display it.","title":"cache:get"},{"location":"cache_get/#examples","text":"drush cache:get hook_info bootstrap . Display the data for the cache id \"hook_info\" from the \"bootstrap\" bin. drush cache:get update_available_releases update . Display the data for the cache id \"update_available_releases\" from the \"update\" bin.","title":"Examples"},{"location":"cache_get/#arguments","text":"--cid . The id of the object to fetch. [--bin] . The cache bin to fetch from.","title":"Arguments"},{"location":"cache_get/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: json ] --fields=FIELDS . Available fields: Cache ID (cid), Data (data), Created (created), Expire (expire), Tags (tags), Checksum (checksum), Valid (valid) [default: cid,data,created,expire,tags ] --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"cache_get/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"cache_get/#aliases","text":"cg cache-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"cache_rebuild/","text":"cache:rebuild \u00b6 Rebuild a Drupal 8 site. This is a copy of core/rebuild.php. Additionally it also clears Drush cache and Drupal's render cache. Options \u00b6 --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option. Aliases \u00b6 cr rebuild cache-rebuild Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"cache:rebuild"},{"location":"cache_rebuild/#cacherebuild","text":"Rebuild a Drupal 8 site. This is a copy of core/rebuild.php. Additionally it also clears Drush cache and Drupal's render cache.","title":"cache:rebuild"},{"location":"cache_rebuild/#options","text":"--cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option.","title":"Options"},{"location":"cache_rebuild/#aliases","text":"cr rebuild cache-rebuild Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"cache_set/","text":"cache:set \u00b6 Cache an object expressed in JSON or var_export() format. Arguments \u00b6 --cid . The id of the object to set. --data . The object to set in the cache. Use - to read the object from STDIN. [--bin] . The cache bin to store the object in. [--expire] . 'CACHE_PERMANENT', or a Unix timestamp. [--tags] . A comma delimited list of cache tags. Options \u00b6 --input-format[=INPUT-FORMAT] . The format of value. Use json for complex values. [default: string ] --cache-get . If the object is the result a previous fetch from the cache, only store the value in the 'data' property of the object in the cache. Aliases \u00b6 cs cache-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"cache:set"},{"location":"cache_set/#cacheset","text":"Cache an object expressed in JSON or var_export() format.","title":"cache:set"},{"location":"cache_set/#arguments","text":"--cid . The id of the object to set. --data . The object to set in the cache. Use - to read the object from STDIN. [--bin] . The cache bin to store the object in. [--expire] . 'CACHE_PERMANENT', or a Unix timestamp. [--tags] . A comma delimited list of cache tags.","title":"Arguments"},{"location":"cache_set/#options","text":"--input-format[=INPUT-FORMAT] . The format of value. Use json for complex values. [default: string ] --cache-get . If the object is the result a previous fetch from the cache, only store the value in the 'data' property of the object in the cache.","title":"Options"},{"location":"cache_set/#aliases","text":"cs cache-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"cache_tags/","text":"cache:tags \u00b6 Invalidate by cache tags. Examples \u00b6 drush cache:tag node:12,user:4 . Purge content associated with two cache tags. Arguments \u00b6 --tags . A comma delimited list of cache tags to clear. Aliases \u00b6 ct Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"cache:tags"},{"location":"cache_tags/#cachetags","text":"Invalidate by cache tags.","title":"cache:tags"},{"location":"cache_tags/#examples","text":"drush cache:tag node:12,user:4 . Purge content associated with two cache tags.","title":"Examples"},{"location":"cache_tags/#arguments","text":"--tags . A comma delimited list of cache tags to clear.","title":"Arguments"},{"location":"cache_tags/#aliases","text":"ct Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_delete/","text":"config:delete \u00b6 Delete a configuration key, or a whole object. Examples \u00b6 drush config:delete system.site . Delete the the system.site config object. drush config:delete system.site page.front . Delete the 'page.front' key from the system.site object. Arguments \u00b6 --config_name . The config object name, for example \"system.site\". [--key] . A config key to clear, for example \"page.front\". Aliases \u00b6 cdel config-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:delete"},{"location":"config_delete/#configdelete","text":"Delete a configuration key, or a whole object.","title":"config:delete"},{"location":"config_delete/#examples","text":"drush config:delete system.site . Delete the the system.site config object. drush config:delete system.site page.front . Delete the 'page.front' key from the system.site object.","title":"Examples"},{"location":"config_delete/#arguments","text":"--config_name . The config object name, for example \"system.site\". [--key] . A config key to clear, for example \"page.front\".","title":"Arguments"},{"location":"config_delete/#aliases","text":"cdel config-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_edit/","text":"config:edit \u00b6 Open a config file in a text editor. Edits are imported after closing editor. Examples \u00b6 drush config:edit image.style.large . Edit the image style configurations. drush config:edit . Choose a config file to edit. drush --bg config-edit image.style.large . Return to shell prompt as soon as the editor window opens. Arguments \u00b6 --config_name . The config object name, for example system.site . Options \u00b6 --editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process. Aliases \u00b6 cedit config-edit Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:edit"},{"location":"config_edit/#configedit","text":"Open a config file in a text editor. Edits are imported after closing editor.","title":"config:edit"},{"location":"config_edit/#examples","text":"drush config:edit image.style.large . Edit the image style configurations. drush config:edit . Choose a config file to edit. drush --bg config-edit image.style.large . Return to shell prompt as soon as the editor window opens.","title":"Examples"},{"location":"config_edit/#arguments","text":"--config_name . The config object name, for example system.site .","title":"Arguments"},{"location":"config_edit/#options","text":"--editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process.","title":"Options"},{"location":"config_edit/#aliases","text":"cedit config-edit Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_export/","text":"config:export \u00b6 Export Drupal configuration to a directory. Examples \u00b6 drush config:export . Export configuration files to the site's config directory. drush config:export --destination . Export configuration; Save files in a backup directory named config-export. Arguments \u00b6 [--label] . A config directory label (i.e. a key in $config_directories array in settings.php). Options \u00b6 --add . Run git add -p after exporting. This lets you choose which config changes to sync for commit. --commit . Run git add -A and git commit after exporting. This commits everything that was exported without prompting. --message=MESSAGE . Commit comment for the exported configuration. Optional; may only be used with --commit. --destination[=DESTINATION] . An arbitrary directory that should receive the exported files. A backup directory is used when no value is provided. --diff . Show preview as a diff, instead of a change list. --format[=FORMAT] . Aliases \u00b6 cex config-export Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:export"},{"location":"config_export/#configexport","text":"Export Drupal configuration to a directory.","title":"config:export"},{"location":"config_export/#examples","text":"drush config:export . Export configuration files to the site's config directory. drush config:export --destination . Export configuration; Save files in a backup directory named config-export.","title":"Examples"},{"location":"config_export/#arguments","text":"[--label] . A config directory label (i.e. a key in $config_directories array in settings.php).","title":"Arguments"},{"location":"config_export/#options","text":"--add . Run git add -p after exporting. This lets you choose which config changes to sync for commit. --commit . Run git add -A and git commit after exporting. This commits everything that was exported without prompting. --message=MESSAGE . Commit comment for the exported configuration. Optional; may only be used with --commit. --destination[=DESTINATION] . An arbitrary directory that should receive the exported files. A backup directory is used when no value is provided. --diff . Show preview as a diff, instead of a change list. --format[=FORMAT] .","title":"Options"},{"location":"config_export/#aliases","text":"cex config-export Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_get/","text":"config:get \u00b6 Display a config value, or a whole configuration object. Examples \u00b6 drush config:get system.site . Displays the system.site config. drush config:get system.site page.front . Gets system.site:page.front value. Arguments \u00b6 --config_name . The config object name, for example system.site . [--key] . The config key, for example page.front . Optional. Options \u00b6 --format[=FORMAT] . [default: yaml ] --source[=SOURCE] . The config storage source to read. Additional labels may be defined in settings.php. [default: active ] --include-overridden . Apply module and settings.php overrides to values. Aliases \u00b6 cget config-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:get"},{"location":"config_get/#configget","text":"Display a config value, or a whole configuration object.","title":"config:get"},{"location":"config_get/#examples","text":"drush config:get system.site . Displays the system.site config. drush config:get system.site page.front . Gets system.site:page.front value.","title":"Examples"},{"location":"config_get/#arguments","text":"--config_name . The config object name, for example system.site . [--key] . The config key, for example page.front . Optional.","title":"Arguments"},{"location":"config_get/#options","text":"--format[=FORMAT] . [default: yaml ] --source[=SOURCE] . The config storage source to read. Additional labels may be defined in settings.php. [default: active ] --include-overridden . Apply module and settings.php overrides to values.","title":"Options"},{"location":"config_get/#aliases","text":"cget config-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_import/","text":"config:import \u00b6 Import config from a config directory. Arguments \u00b6 [--label] . A config directory label (i.e. a key in \\$config_directories array in settings.php). Options \u00b6 --preview[=PREVIEW] . Deprecated. Format for displaying proposed changes. Recognized values: list, diff. [default: list ] --source=SOURCE . An arbitrary directory that holds the configuration files. An alternative to label argument --partial . Allows for partial config imports from the source directory. Only updates and new configs will be processed with this flag (missing configs will not be deleted). No config transformation happens. --diff . Show preview as a diff. Aliases \u00b6 cim config-import Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:import"},{"location":"config_import/#configimport","text":"Import config from a config directory.","title":"config:import"},{"location":"config_import/#arguments","text":"[--label] . A config directory label (i.e. a key in \\$config_directories array in settings.php).","title":"Arguments"},{"location":"config_import/#options","text":"--preview[=PREVIEW] . Deprecated. Format for displaying proposed changes. Recognized values: list, diff. [default: list ] --source=SOURCE . An arbitrary directory that holds the configuration files. An alternative to label argument --partial . Allows for partial config imports from the source directory. Only updates and new configs will be processed with this flag (missing configs will not be deleted). No config transformation happens. --diff . Show preview as a diff.","title":"Options"},{"location":"config_import/#aliases","text":"cim config-import Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_pull/","text":"config:pull \u00b6 Export and transfer config from one environment to another. Examples \u00b6 drush config:pull @prod @stage . Export config from @prod and transfer to @stage. drush config:pull @prod @self --label=vcs . Export config from @prod and transfer to the vcs config directory of current site. drush config:pull @prod @self:../config/sync . Export config to a custom directory. Relative paths are calculated from Drupal root. Arguments \u00b6 --source . A site-alias or the name of a subdirectory within /sites whose config you want to copy from. --destination . A site-alias or the name of a subdirectory within /sites whose config you want to replace. Options \u00b6 --safe . Validate that there are no git uncommitted changes before proceeding --label[=LABEL] . A config directory label (i.e. a key in $config_directories array in settings.php). [default: sync ] --runner[=RUNNER] . Where to run the rsync command; defaults to the local site. Can also be source or destination . --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null ] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 Creating site aliases for running Drush on remote sites. (docs:aliases) Drupal config export instructions, including customizing config by environment. (docs:config:exporting) Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 cpull config-pull Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:pull"},{"location":"config_pull/#configpull","text":"Export and transfer config from one environment to another.","title":"config:pull"},{"location":"config_pull/#examples","text":"drush config:pull @prod @stage . Export config from @prod and transfer to @stage. drush config:pull @prod @self --label=vcs . Export config from @prod and transfer to the vcs config directory of current site. drush config:pull @prod @self:../config/sync . Export config to a custom directory. Relative paths are calculated from Drupal root.","title":"Examples"},{"location":"config_pull/#arguments","text":"--source . A site-alias or the name of a subdirectory within /sites whose config you want to copy from. --destination . A site-alias or the name of a subdirectory within /sites whose config you want to replace.","title":"Arguments"},{"location":"config_pull/#options","text":"--safe . Validate that there are no git uncommitted changes before proceeding --label[=LABEL] . A config directory label (i.e. a key in $config_directories array in settings.php). [default: sync ] --runner[=RUNNER] . Where to run the rsync command; defaults to the local site. Can also be source or destination . --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null ] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"config_pull/#topics","text":"Creating site aliases for running Drush on remote sites. (docs:aliases) Drupal config export instructions, including customizing config by environment. (docs:config:exporting) Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"config_pull/#aliases","text":"cpull config-pull Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_set/","text":"config:set \u00b6 Set config value directly. Does not perform a config import. Examples \u00b6 drush config:set system.site page.front '/path/to/page' . Sets the given URL path as value for the config item with key page.front of system.site config object. Arguments \u00b6 --config_name . The config object name, for example system.site . --key . The config key, for example page.front . [--value] . The value to assign to the config key. Use - to read from STDIN. Options \u00b6 --input-format[=INPUT-FORMAT] . Format to parse the object. Recognized values: string , yaml [default: string ] --value=VALUE . The value to assign to the config key (if any). Aliases \u00b6 cset config-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:set"},{"location":"config_set/#configset","text":"Set config value directly. Does not perform a config import.","title":"config:set"},{"location":"config_set/#examples","text":"drush config:set system.site page.front '/path/to/page' . Sets the given URL path as value for the config item with key page.front of system.site config object.","title":"Examples"},{"location":"config_set/#arguments","text":"--config_name . The config object name, for example system.site . --key . The config key, for example page.front . [--value] . The value to assign to the config key. Use - to read from STDIN.","title":"Arguments"},{"location":"config_set/#options","text":"--input-format[=INPUT-FORMAT] . Format to parse the object. Recognized values: string , yaml [default: string ] --value=VALUE . The value to assign to the config key (if any).","title":"Options"},{"location":"config_set/#aliases","text":"cset config-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"config_status/","text":"config:status \u00b6 Display status of configuration (differences between the filesystem configuration and database configuration). Examples \u00b6 drush config:status . Display configuration items that need to be synchronized. drush config:status --state=Identical . Display configuration items that are in default state. drush config:status --state='Only in sync dir' --prefix=node.type. . Display all content types that would be created in active storage on configuration import. drush config:status --state=Any --format=list . List all config names. Options \u00b6 --state[=STATE] . A comma-separated list of states to filter results. [default: Only in DB,Only in sync dir,Different ] --prefix=PREFIX . Prefix The config prefix. For example, system . No prefix will return all names in the system. --label=LABEL . A config directory label (i.e. a key in $config_directories array in settings.php). --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Name (name), State (state) [default: name,state ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 cst config-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"config:status"},{"location":"config_status/#configstatus","text":"Display status of configuration (differences between the filesystem configuration and database configuration).","title":"config:status"},{"location":"config_status/#examples","text":"drush config:status . Display configuration items that need to be synchronized. drush config:status --state=Identical . Display configuration items that are in default state. drush config:status --state='Only in sync dir' --prefix=node.type. . Display all content types that would be created in active storage on configuration import. drush config:status --state=Any --format=list . List all config names.","title":"Examples"},{"location":"config_status/#options","text":"--state[=STATE] . A comma-separated list of states to filter results. [default: Only in DB,Only in sync dir,Different ] --prefix=PREFIX . Prefix The config prefix. For example, system . No prefix will return all names in the system. --label=LABEL . A config directory label (i.e. a key in $config_directories array in settings.php). --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Name (name), State (state) [default: name,state ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"config_status/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"config_status/#aliases","text":"cst config-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_cron/","text":"core:cron \u00b6 Run all cron hooks in all active modules for specified site. Topics \u00b6 Crontab instructions for running your Drupal cron tasks via drush cron . (docs:cron) Aliases \u00b6 cron core-cron Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:cron"},{"location":"core_cron/#corecron","text":"Run all cron hooks in all active modules for specified site.","title":"core:cron"},{"location":"core_cron/#topics","text":"Crontab instructions for running your Drupal cron tasks via drush cron . (docs:cron)","title":"Topics"},{"location":"core_cron/#aliases","text":"cron core-cron Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_edit/","text":"core:edit \u00b6 Edit drushrc, site alias, and Drupal settings.php files. Examples \u00b6 drush core:config . Pick from a list of config/alias/settings files. Open selected in editor. drush --bg core-config . Return to shell prompt as soon as the editor window opens. drush core:config etc . Edit the global configuration file. drush core:config demo.alia . Edit a particular alias file. drush core:config sett . Edit settings.php for the current Drupal site. drush core:config --choice=2 . Edit the second file in the choice list. Arguments \u00b6 [--filter] . A substring for filtering the list of files. Omit this argument to choose from loaded files. Options \u00b6 --editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process. Aliases \u00b6 conf config core-edit Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:edit"},{"location":"core_edit/#coreedit","text":"Edit drushrc, site alias, and Drupal settings.php files.","title":"core:edit"},{"location":"core_edit/#examples","text":"drush core:config . Pick from a list of config/alias/settings files. Open selected in editor. drush --bg core-config . Return to shell prompt as soon as the editor window opens. drush core:config etc . Edit the global configuration file. drush core:config demo.alia . Edit a particular alias file. drush core:config sett . Edit settings.php for the current Drupal site. drush core:config --choice=2 . Edit the second file in the choice list.","title":"Examples"},{"location":"core_edit/#arguments","text":"[--filter] . A substring for filtering the list of files. Omit this argument to choose from loaded files.","title":"Arguments"},{"location":"core_edit/#options","text":"--editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process.","title":"Options"},{"location":"core_edit/#aliases","text":"conf config core-edit Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_init/","text":"core:init \u00b6 Enrich the bash startup file with bash aliases and a smart command prompt. Examples \u00b6 core-init --edit . Enrich Bash and open drush config file in editor. core-init --edit --bg . Return to shell prompt as soon as the editor window opens Options \u00b6 --edit . Open the new config file in an editor. --add-path[=ADD-PATH] . Always add Drush to the $PATH in the user's .bashrc file, even if it is already in the $PATH. Use --no-add-path to skip updating .bashrc with the Drush $PATH. Default is to update .bashrc only if Drush is not already in the $PATH. --editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process. Aliases \u00b6 init core-init Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:init"},{"location":"core_init/#coreinit","text":"Enrich the bash startup file with bash aliases and a smart command prompt.","title":"core:init"},{"location":"core_init/#examples","text":"core-init --edit . Enrich Bash and open drush config file in editor. core-init --edit --bg . Return to shell prompt as soon as the editor window opens","title":"Examples"},{"location":"core_init/#options","text":"--edit . Open the new config file in an editor. --add-path[=ADD-PATH] . Always add Drush to the $PATH in the user's .bashrc file, even if it is already in the $PATH. Use --no-add-path to skip updating .bashrc with the Drush $PATH. Default is to update .bashrc only if Drush is not already in the $PATH. --editor[=EDITOR] . A string of bash which launches user's preferred text editor. Defaults to ${VISUAL-${EDITOR-vi}} . --bg . Launch editor in background process.","title":"Options"},{"location":"core_init/#aliases","text":"init core-init Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_requirements/","text":"core:requirements \u00b6 Information about things that may be wrong in your Drupal installation. Examples \u00b6 drush core:requirements . Show all status lines from the Status Report admin page. drush core:requirements --severity=2 . Show only the red lines from the Status Report admin page. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --severity[=SEVERITY] . Only show status report messages with a severity greater than or equal to the specified value. [default: -1 ] --ignore[=IGNORE] . Comma-separated list of requirements to remove from output. Run with --format=yaml to see key values to use. --fields=FIELDS . Available fields: Title (title), Severity (severity), SID (sid), Description (description), Summary (value) [default: title,severity,value ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 status-report rq core-requirements Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:requirements"},{"location":"core_requirements/#corerequirements","text":"Information about things that may be wrong in your Drupal installation.","title":"core:requirements"},{"location":"core_requirements/#examples","text":"drush core:requirements . Show all status lines from the Status Report admin page. drush core:requirements --severity=2 . Show only the red lines from the Status Report admin page.","title":"Examples"},{"location":"core_requirements/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --severity[=SEVERITY] . Only show status report messages with a severity greater than or equal to the specified value. [default: -1 ] --ignore[=IGNORE] . Comma-separated list of requirements to remove from output. Run with --format=yaml to see key values to use. --fields=FIELDS . Available fields: Title (title), Severity (severity), SID (sid), Description (description), Summary (value) [default: title,severity,value ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"core_requirements/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"core_requirements/#aliases","text":"status-report rq core-requirements Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_rsync/","text":"core:rsync \u00b6 Rsync Drupal code or files to/from another server using ssh. Examples \u00b6 drush rsync @dev @stage . Rsync Drupal root from Drush alias dev to the alias stage. drush rsync ./ @stage:%files/img . Rsync all files in the current directory to the img directory in the file storage folder on the Drush alias stage. drush rsync @dev @stage -- --exclude=*.sql --delete . Rsync Drupal root from the Drush alias dev to the alias stage, excluding all .sql files and delete all files on the destination that are no longer on the source. drush rsync @dev @stage --ssh-options=\"-o StrictHostKeyChecking=no\" -- --delete . Customize how rsync connects with remote host via SSH. rsync options like --delete are placed after a --. Arguments \u00b6 --source . A site alias and optional path. See rsync documentation and example.site.yml. --target . A site alias and optional path. See rsync documentation and example.site.yml. [--extra]... . Additional parameters after the ssh statement. Options \u00b6 --exclude-paths=EXCLUDE-PATHS . List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows). --include-paths=INCLUDE-PATHS . List of paths to include, seperated by : (Unix-based systems) or ; (Windows). --mode[=MODE] . The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz. [default: akz ] --ssh-options=SSH-OPTIONS . A string appended to ssh command during rsync, sql-sync, etc. Topics \u00b6 Creating site aliases for running Drush on remote sites. (docs:aliases) Aliases \u00b6 rsync core-rsync Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:rsync"},{"location":"core_rsync/#corersync","text":"Rsync Drupal code or files to/from another server using ssh.","title":"core:rsync"},{"location":"core_rsync/#examples","text":"drush rsync @dev @stage . Rsync Drupal root from Drush alias dev to the alias stage. drush rsync ./ @stage:%files/img . Rsync all files in the current directory to the img directory in the file storage folder on the Drush alias stage. drush rsync @dev @stage -- --exclude=*.sql --delete . Rsync Drupal root from the Drush alias dev to the alias stage, excluding all .sql files and delete all files on the destination that are no longer on the source. drush rsync @dev @stage --ssh-options=\"-o StrictHostKeyChecking=no\" -- --delete . Customize how rsync connects with remote host via SSH. rsync options like --delete are placed after a --.","title":"Examples"},{"location":"core_rsync/#arguments","text":"--source . A site alias and optional path. See rsync documentation and example.site.yml. --target . A site alias and optional path. See rsync documentation and example.site.yml. [--extra]... . Additional parameters after the ssh statement.","title":"Arguments"},{"location":"core_rsync/#options","text":"--exclude-paths=EXCLUDE-PATHS . List of paths to exclude, seperated by : (Unix-based systems) or ; (Windows). --include-paths=INCLUDE-PATHS . List of paths to include, seperated by : (Unix-based systems) or ; (Windows). --mode[=MODE] . The unary flags to pass to rsync; --mode=rultz implies rsync -rultz. Default is -akz. [default: akz ] --ssh-options=SSH-OPTIONS . A string appended to ssh command during rsync, sql-sync, etc.","title":"Options"},{"location":"core_rsync/#topics","text":"Creating site aliases for running Drush on remote sites. (docs:aliases)","title":"Topics"},{"location":"core_rsync/#aliases","text":"rsync core-rsync Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_status/","text":"core:status \u00b6 An overview of the environment - Drush and Drupal. Examples \u00b6 drush core-status --field=files . Emit just one field, not all the default fields. drush core-status --fields=* . Emit all fields, not just the default ones. Arguments \u00b6 [--filter] . A field to filter on. @deprecated - use --field option instead. Options \u00b6 --project=PROJECT . A comma delimited list of projects. Their paths will be added to path-aliases section. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Drupal version (drupal-version), Site URI (uri), DB driver (db-driver), DB hostname (db-hostname), DB port (db-port), DB username (db-username), DB password (db-password), DB name (db-name), Database (db-status), Drupal bootstrap (bootstrap), Default theme (theme), Admin theme (admin-theme), PHP binary (php-bin), PHP config (php-conf), PHP OS (php-os), Drush script (drush-script), Drush version (drush-version), Drush temp (drush-temp), Drush cache folder (drush-cache-directory), Drush configs (drush-conf), Drush aliases (drush-alias-files), Alias search paths (alias-searchpaths), Install profile (install-profile), Drupal root (root), Drupal Settings (drupal-settings-file), Site path (site-path), Site path (site), Themes path (themes), Modules path (modules), Files, Public (files), Files, Private (private), Files, Temp (temp), Drupal config (config-sync), Files, Public (files-path), Files, Temp (temp-path), Other paths (%paths) [default: drupal-version,uri,db-driver,db-hostname,db-port,db-username,db-name,db-status,bootstrap,theme,admin-theme,php-bin,php-conf,php-os,drush-script,drush-version,drush-temp,drush-conf,install-profile,root,site,files,private,temp ] --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 README.md (docs:readme) Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 status st core-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:status"},{"location":"core_status/#corestatus","text":"An overview of the environment - Drush and Drupal.","title":"core:status"},{"location":"core_status/#examples","text":"drush core-status --field=files . Emit just one field, not all the default fields. drush core-status --fields=* . Emit all fields, not just the default ones.","title":"Examples"},{"location":"core_status/#arguments","text":"[--filter] . A field to filter on. @deprecated - use --field option instead.","title":"Arguments"},{"location":"core_status/#options","text":"--project=PROJECT . A comma delimited list of projects. Their paths will be added to path-aliases section. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Drupal version (drupal-version), Site URI (uri), DB driver (db-driver), DB hostname (db-hostname), DB port (db-port), DB username (db-username), DB password (db-password), DB name (db-name), Database (db-status), Drupal bootstrap (bootstrap), Default theme (theme), Admin theme (admin-theme), PHP binary (php-bin), PHP config (php-conf), PHP OS (php-os), Drush script (drush-script), Drush version (drush-version), Drush temp (drush-temp), Drush cache folder (drush-cache-directory), Drush configs (drush-conf), Drush aliases (drush-alias-files), Alias search paths (alias-searchpaths), Install profile (install-profile), Drupal root (root), Drupal Settings (drupal-settings-file), Site path (site-path), Site path (site), Themes path (themes), Modules path (modules), Files, Public (files), Files, Private (private), Files, Temp (temp), Drupal config (config-sync), Files, Public (files-path), Files, Temp (temp-path), Other paths (%paths) [default: drupal-version,uri,db-driver,db-hostname,db-port,db-username,db-name,db-status,bootstrap,theme,admin-theme,php-bin,php-conf,php-os,drush-script,drush-version,drush-temp,drush-conf,install-profile,root,site,files,private,temp ] --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"core_status/#topics","text":"README.md (docs:readme) Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"core_status/#aliases","text":"status st core-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"core_topic/","text":"core:topic \u00b6 Read detailed documentation on a given topic. Examples \u00b6 drush topic . Pick from all available topics. drush topic docs-repl . Show documentation for the Drush interactive shell drush docs:r . Filter topics for those starting with 'docs-r'. Arguments \u00b6 --topic_name . The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis). Topics \u00b6 README.md (docs:readme) Aliases \u00b6 topic core-topic Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"core:topic"},{"location":"core_topic/#coretopic","text":"Read detailed documentation on a given topic.","title":"core:topic"},{"location":"core_topic/#examples","text":"drush topic . Pick from all available topics. drush topic docs-repl . Show documentation for the Drush interactive shell drush docs:r . Filter topics for those starting with 'docs-r'.","title":"Examples"},{"location":"core_topic/#arguments","text":"--topic_name . The name of the topic you wish to view. If omitted, list all topic descriptions (and names in parenthesis).","title":"Arguments"},{"location":"core_topic/#topics","text":"README.md (docs:readme)","title":"Topics"},{"location":"core_topic/#aliases","text":"topic core-topic Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"deploy/","text":"deploy \u00b6 Run several commands after performing a code deployment. Examples \u00b6 drush deploy -v -y . Run updates with verbose logging and accept all prompts. Topics \u00b6 Deploy command for Drupal. (docs:deploy) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"deploy"},{"location":"deploy/#deploy","text":"Run several commands after performing a code deployment.","title":"deploy"},{"location":"deploy/#examples","text":"drush deploy -v -y . Run updates with verbose logging and accept all prompts.","title":"Examples"},{"location":"deploy/#topics","text":"Deploy command for Drupal. (docs:deploy) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"deploy_hook-status/","text":"deploy:hook-status \u00b6 Prints information about pending deploy update hooks. Examples \u00b6 deploy:hook-status . Prints information about pending deploy hooks. Options \u00b6 --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Module (module), Hook (hook), Description (description) [default: module,hook,description ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Deploy command for Drupal. (docs:deploy) Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"deploy:hook-status"},{"location":"deploy_hook-status/#deployhook-status","text":"Prints information about pending deploy update hooks.","title":"deploy:hook-status"},{"location":"deploy_hook-status/#examples","text":"deploy:hook-status . Prints information about pending deploy hooks.","title":"Examples"},{"location":"deploy_hook-status/#options","text":"--format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Module (module), Hook (hook), Description (description) [default: module,hook,description ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"deploy_hook-status/#topics","text":"Deploy command for Drupal. (docs:deploy) Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"deploy_hook/","text":"deploy:hook \u00b6 Run pending deploy update hooks. Examples \u00b6 deploy:hook . Run pending deploy hooks. Topics \u00b6 Deploy command for Drupal. (docs:deploy) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"deploy:hook"},{"location":"deploy_hook/#deployhook","text":"Run pending deploy update hooks.","title":"deploy:hook"},{"location":"deploy_hook/#examples","text":"deploy:hook . Run pending deploy hooks.","title":"Examples"},{"location":"deploy_hook/#topics","text":"Deploy command for Drupal. (docs:deploy) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"drupal_directory/","text":"drupal:directory \u00b6 Return the filesystem path for modules/themes and other key folders. Examples \u00b6 cd $(drush dd devel) . Navigate into the devel module directory cd $(drush dd) . Navigate to the root of your Drupal site cd $(drush dd files) . Navigate to the files directory. drush dd @alias:%files . Print the path to the files directory on the site @alias. edit $(drush dd devel)/devel.module . Open devel module in your editor Arguments \u00b6 [--target] . A module/theme name, or special names like root, files, private, or an alias:path string such as @alias:%files. Options \u00b6 --local-only . Reject any target that specifies a remote site. Aliases \u00b6 dd drupal-directory Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"drupal:directory"},{"location":"drupal_directory/#drupaldirectory","text":"Return the filesystem path for modules/themes and other key folders.","title":"drupal:directory"},{"location":"drupal_directory/#examples","text":"cd $(drush dd devel) . Navigate into the devel module directory cd $(drush dd) . Navigate to the root of your Drupal site cd $(drush dd files) . Navigate to the files directory. drush dd @alias:%files . Print the path to the files directory on the site @alias. edit $(drush dd devel)/devel.module . Open devel module in your editor","title":"Examples"},{"location":"drupal_directory/#arguments","text":"[--target] . A module/theme name, or special names like root, files, private, or an alias:path string such as @alias:%files.","title":"Arguments"},{"location":"drupal_directory/#options","text":"--local-only . Reject any target that specifies a remote site.","title":"Options"},{"location":"drupal_directory/#aliases","text":"dd drupal-directory Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"entity_delete/","text":"entity:delete \u00b6 Delete content entities. To delete configuration entities, see config:delete command. Examples \u00b6 drush entity:delete node --bundle=article . Delete all article entities. drush entity:delete shortcut . Delete all shortcut entities. drush entity:delete node 22,24 . Delete nodes 22 and 24. drush entity:delete node --exclude=9,14,81 . Delete all nodes except node 9, 14 and 81. drush entity:delete user . Delete all users except uid=1. Arguments \u00b6 --entity_type . An entity machine name. [--ids] . A comma delimited list of Ids. Options \u00b6 --bundle=BUNDLE . Restrict deletion to the specified bundle. Ignored when ids is specified. --exclude=EXCLUDE . Exclude certain entities from deletion. Ignored when ids is specified. Aliases \u00b6 edel entity-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"entity:delete"},{"location":"entity_delete/#entitydelete","text":"Delete content entities. To delete configuration entities, see config:delete command.","title":"entity:delete"},{"location":"entity_delete/#examples","text":"drush entity:delete node --bundle=article . Delete all article entities. drush entity:delete shortcut . Delete all shortcut entities. drush entity:delete node 22,24 . Delete nodes 22 and 24. drush entity:delete node --exclude=9,14,81 . Delete all nodes except node 9, 14 and 81. drush entity:delete user . Delete all users except uid=1.","title":"Examples"},{"location":"entity_delete/#arguments","text":"--entity_type . An entity machine name. [--ids] . A comma delimited list of Ids.","title":"Arguments"},{"location":"entity_delete/#options","text":"--bundle=BUNDLE . Restrict deletion to the specified bundle. Ignored when ids is specified. --exclude=EXCLUDE . Exclude certain entities from deletion. Ignored when ids is specified.","title":"Options"},{"location":"entity_delete/#aliases","text":"edel entity-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"entity_updates/","text":"entity:updates \u00b6 Apply pending entity schema updates. Examples \u00b6 drush updatedb:status --entity-updates | grep entity-update . Use updatedb:status to detect pending updates. Options \u00b6 --cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option. Aliases \u00b6 entup entity-updates Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"entity:updates"},{"location":"entity_updates/#entityupdates","text":"Apply pending entity schema updates.","title":"entity:updates"},{"location":"entity_updates/#examples","text":"drush updatedb:status --entity-updates | grep entity-update . Use updatedb:status to detect pending updates.","title":"Examples"},{"location":"entity_updates/#options","text":"--cache-clear[=CACHE-CLEAR] . Set to 0 to suppress normal cache clearing; the caller should then clear if needed. [default: 1 ] --no-cache-clear . Negate --cache-clear option.","title":"Options"},{"location":"entity_updates/#aliases","text":"entup entity-updates Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"generate/","text":"generate \u00b6 Generate boilerplate code for modules/plugins/services etc. Drush asks questions so that the generated code is as polished as possible. After generating, Drush lists the files that were created. Examples \u00b6 drush generate . Pick from available generators and then run it. drush generate controller . Generate a controller class for your module. drush generate drush-command-file . Generate a Drush commandfile for your module. Arguments \u00b6 [--generator] . A generator name. Omit to pick from available Generators. Options \u00b6 --answers=ANSWERS . A JSON string containing pairs of question and answers. --directory=DIRECTORY . Absolute path to a base directory for file writing. Topics \u00b6 Instructions on creating your own Drush Generators. (docs:generators) Aliases \u00b6 gen Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"generate"},{"location":"generate/#generate","text":"Generate boilerplate code for modules/plugins/services etc. Drush asks questions so that the generated code is as polished as possible. After generating, Drush lists the files that were created.","title":"generate"},{"location":"generate/#examples","text":"drush generate . Pick from available generators and then run it. drush generate controller . Generate a controller class for your module. drush generate drush-command-file . Generate a Drush commandfile for your module.","title":"Examples"},{"location":"generate/#arguments","text":"[--generator] . A generator name. Omit to pick from available Generators.","title":"Arguments"},{"location":"generate/#options","text":"--answers=ANSWERS . A JSON string containing pairs of question and answers. --directory=DIRECTORY . Absolute path to a base directory for file writing.","title":"Options"},{"location":"generate/#topics","text":"Instructions on creating your own Drush Generators. (docs:generators)","title":"Topics"},{"location":"generate/#aliases","text":"gen Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"help/","text":"help \u00b6 Display usage details for a command. Examples \u00b6 drush help pm-uninstall . Show help for a command. drush help pmu . Show help for a command using an alias. drush help --format=xml . Show all available commands in XML format. drush help --format=json . All available commands, in JSON format. Arguments \u00b6 [--command_name] . A command name Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,tsv,var_dump,var_export,xml,yaml [default: helpcli ] --include-field-labels . --table-style[=TABLE-STYLE] . [default: compact ] Topics \u00b6 README.md (docs:readme) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"help"},{"location":"help/#help","text":"Display usage details for a command.","title":"help"},{"location":"help/#examples","text":"drush help pm-uninstall . Show help for a command. drush help pmu . Show help for a command using an alias. drush help --format=xml . Show all available commands in XML format. drush help --format=json . All available commands, in JSON format.","title":"Examples"},{"location":"help/#arguments","text":"[--command_name] . A command name","title":"Arguments"},{"location":"help/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,tsv,var_dump,var_export,xml,yaml [default: helpcli ] --include-field-labels . --table-style[=TABLE-STYLE] . [default: compact ]","title":"Options"},{"location":"help/#topics","text":"README.md (docs:readme) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"image_derive/","text":"image:derive \u00b6 Create an image derivative. Examples \u00b6 drush image:derive thumbnail core/themes/bartik/screenshot.png . Save thumbnail sized derivative of logo image. Arguments \u00b6 --style_name . An image style machine name. --source . Path to a source image. Optionally prepend stream wrapper scheme. Aliases \u00b6 id image-derive Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"image:derive"},{"location":"image_derive/#imagederive","text":"Create an image derivative.","title":"image:derive"},{"location":"image_derive/#examples","text":"drush image:derive thumbnail core/themes/bartik/screenshot.png . Save thumbnail sized derivative of logo image.","title":"Examples"},{"location":"image_derive/#arguments","text":"--style_name . An image style machine name. --source . Path to a source image. Optionally prepend stream wrapper scheme.","title":"Arguments"},{"location":"image_derive/#aliases","text":"id image-derive Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"image_flush/","text":"image:flush \u00b6 Flush all derived images for a given style. Examples \u00b6 drush image:flush . Pick an image style and then delete its derivatives. drush image:flush thumbnail,large . Delete all thumbnail and large derivatives. drush image:flush --all . Flush all derived images. They will be regenerated on demand. Arguments \u00b6 --style_names . A comma delimited list of image style machine names. If not provided, user may choose from a list of names. Options \u00b6 --all . Flush all derived images Aliases \u00b6 if image-flush Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"image:flush"},{"location":"image_flush/#imageflush","text":"Flush all derived images for a given style.","title":"image:flush"},{"location":"image_flush/#examples","text":"drush image:flush . Pick an image style and then delete its derivatives. drush image:flush thumbnail,large . Delete all thumbnail and large derivatives. drush image:flush --all . Flush all derived images. They will be regenerated on demand.","title":"Examples"},{"location":"image_flush/#arguments","text":"--style_names . A comma delimited list of image style machine names. If not provided, user may choose from a list of names.","title":"Arguments"},{"location":"image_flush/#options","text":"--all . Flush all derived images","title":"Options"},{"location":"image_flush/#aliases","text":"if image-flush Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"jn_get/","text":"jn:get \u00b6 Execute a JSONAPI request. Examples \u00b6 drush jn:get jsonapi/node/article . Get a list of articles back as JSON. drush jn:get jsonapi/node/article | jq . Pretty print JSON by piping to jq. See https://stedolan.github.io/jq/ for lots more jq features. Arguments \u00b6 --url . The JSONAPI URL to request. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: json ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"jn:get"},{"location":"jn_get/#jnget","text":"Execute a JSONAPI request.","title":"jn:get"},{"location":"jn_get/#examples","text":"drush jn:get jsonapi/node/article . Get a list of articles back as JSON. drush jn:get jsonapi/node/article | jq . Pretty print JSON by piping to jq. See https://stedolan.github.io/jq/ for lots more jq features.","title":"Examples"},{"location":"jn_get/#arguments","text":"--url . The JSONAPI URL to request.","title":"Arguments"},{"location":"jn_get/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: json ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Options"},{"location":"list/","text":"list \u00b6 List available commands. Examples \u00b6 drush list . List all commands. drush list --filter=devel_generate . Show only commands starting with devel- drush list --format=xml . List all commands in Symfony compatible xml format. Options \u00b6 --format[=FORMAT] . [default: listcli ] --raw . Show a simple table of command names and descriptions. --filter=FILTER . Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names. Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"list"},{"location":"list/#list","text":"List available commands.","title":"list"},{"location":"list/#examples","text":"drush list . List all commands. drush list --filter=devel_generate . Show only commands starting with devel- drush list --format=xml . List all commands in Symfony compatible xml format.","title":"Examples"},{"location":"list/#options","text":"--format[=FORMAT] . [default: listcli ] --raw . Show a simple table of command names and descriptions. --filter=FILTER . Restrict command list to those commands defined in the specified file. Omit value to choose from a list of names. Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Options"},{"location":"locale_check/","text":"locale:check \u00b6 Checks for available translation updates. Aliases \u00b6 locale-check Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"locale:check"},{"location":"locale_check/#localecheck","text":"Checks for available translation updates.","title":"locale:check"},{"location":"locale_check/#aliases","text":"locale-check Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"locale_export/","text":"locale:export \u00b6 Exports to a gettext translation file. See Drupal Core: \\Drupal\\locale\\Form\\ExportForm::submitForm Examples \u00b6 drush locale:export nl > nl.po . Export the Dutch translations with all types. drush locale:export nl --types=customized,not-customized > nl.po . Export the Dutch customized and not customized translations. drush locale:export --template > drupal.pot . Export the source strings only as template file for translation. Arguments \u00b6 [--langcode] . The language code of the exported translations. Options \u00b6 --template . POT file output of extracted source texts to be translated. --types=TYPES . String types to include, defaults to all types. Recognized values: not-customized , customized , not-translated . Aliases \u00b6 locale-export Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"locale:export"},{"location":"locale_export/#localeexport","text":"Exports to a gettext translation file. See Drupal Core: \\Drupal\\locale\\Form\\ExportForm::submitForm","title":"locale:export"},{"location":"locale_export/#examples","text":"drush locale:export nl > nl.po . Export the Dutch translations with all types. drush locale:export nl --types=customized,not-customized > nl.po . Export the Dutch customized and not customized translations. drush locale:export --template > drupal.pot . Export the source strings only as template file for translation.","title":"Examples"},{"location":"locale_export/#arguments","text":"[--langcode] . The language code of the exported translations.","title":"Arguments"},{"location":"locale_export/#options","text":"--template . POT file output of extracted source texts to be translated. --types=TYPES . String types to include, defaults to all types. Recognized values: not-customized , customized , not-translated .","title":"Options"},{"location":"locale_export/#aliases","text":"locale-export Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"locale_import/","text":"locale:import \u00b6 Imports to a gettext translation file. Examples \u00b6 drush locale-import nl drupal-8.4.2.nl.po . Import the Dutch drupal core translation. drush locale-import nl custom-translations.po --type=customized --override=all . Import customized Dutch translations and override any existing translation. Arguments \u00b6 --langcode . The language code of the imported translations. --file . Path and file name of the gettext file. Options \u00b6 --type[=TYPE] . The type of translations to be imported, Options: - customized: Treat imported strings as custom translations. - not-customized: Treat imported strings as not-custom translations. [default: not-customized ] --override=OVERRIDE . Whether and how imported strings will override existing translations. Defaults to the Import behavior configured in the admin interface. Options: - none: Don't overwrite existing translations. Only append new translations. - customized: Only override existing customized translations. - not-customized: Only override non-customized translations, customized translations are kept. - all: Override any existing translation. Aliases \u00b6 locale-import Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"locale:import"},{"location":"locale_import/#localeimport","text":"Imports to a gettext translation file.","title":"locale:import"},{"location":"locale_import/#examples","text":"drush locale-import nl drupal-8.4.2.nl.po . Import the Dutch drupal core translation. drush locale-import nl custom-translations.po --type=customized --override=all . Import customized Dutch translations and override any existing translation.","title":"Examples"},{"location":"locale_import/#arguments","text":"--langcode . The language code of the imported translations. --file . Path and file name of the gettext file.","title":"Arguments"},{"location":"locale_import/#options","text":"--type[=TYPE] . The type of translations to be imported, Options: - customized: Treat imported strings as custom translations. - not-customized: Treat imported strings as not-custom translations. [default: not-customized ] --override=OVERRIDE . Whether and how imported strings will override existing translations. Defaults to the Import behavior configured in the admin interface. Options: - none: Don't overwrite existing translations. Only append new translations. - customized: Only override existing customized translations. - not-customized: Only override non-customized translations, customized translations are kept. - all: Override any existing translation.","title":"Options"},{"location":"locale_import/#aliases","text":"locale-import Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"locale_update/","text":"locale:update \u00b6 Imports the available translation updates. Options \u00b6 --langcodes=LANGCODES . A comma-separated list of language codes to update. If omitted, all translations will be updated. Aliases \u00b6 locale-update Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"locale:update"},{"location":"locale_update/#localeupdate","text":"Imports the available translation updates.","title":"locale:update"},{"location":"locale_update/#options","text":"--langcodes=LANGCODES . A comma-separated list of language codes to update. If omitted, all translations will be updated.","title":"Options"},{"location":"locale_update/#aliases","text":"locale-update Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"php_cli/","text":"php:cli \u00b6 Open an interactive shell on a Drupal site. Options \u00b6 --version-history . Use command history based on Drupal version (Default is per site). --cwd=CWD . A directory to change to before launching the shell. Default is the project root directory Topics \u00b6 Drush's PHP Shell. (docs:repl) Aliases \u00b6 php core:cli core-cli Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"php:cli"},{"location":"php_cli/#phpcli","text":"Open an interactive shell on a Drupal site.","title":"php:cli"},{"location":"php_cli/#options","text":"--version-history . Use command history based on Drupal version (Default is per site). --cwd=CWD . A directory to change to before launching the shell. Default is the project root directory","title":"Options"},{"location":"php_cli/#topics","text":"Drush's PHP Shell. (docs:repl)","title":"Topics"},{"location":"php_cli/#aliases","text":"php core:cli core-cli Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"php_eval/","text":"php:eval \u00b6 Evaluate arbitrary php code after bootstrapping Drupal (if available). Examples \u00b6 drush php:eval '$node = node_load(1); print $node->title;' . Loads node with nid 1 and then prints its title. drush php:eval \"file_unmanaged_copy(\\'$HOME/Pictures/image.jpg\\', \\'public://image.jpg\\');\" . Copies a file whose path is determined by an environment's variable. Use of double quotes so the variable $HOME gets replaced by its value. drush php:eval \"node_access_rebuild();\" . Rebuild node access permissions. Arguments \u00b6 --code . PHP code Options \u00b6 --format[=FORMAT] . [default: var_export ] Aliases \u00b6 eval ev php-eval Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"php:eval"},{"location":"php_eval/#phpeval","text":"Evaluate arbitrary php code after bootstrapping Drupal (if available).","title":"php:eval"},{"location":"php_eval/#examples","text":"drush php:eval '$node = node_load(1); print $node->title;' . Loads node with nid 1 and then prints its title. drush php:eval \"file_unmanaged_copy(\\'$HOME/Pictures/image.jpg\\', \\'public://image.jpg\\');\" . Copies a file whose path is determined by an environment's variable. Use of double quotes so the variable $HOME gets replaced by its value. drush php:eval \"node_access_rebuild();\" . Rebuild node access permissions.","title":"Examples"},{"location":"php_eval/#arguments","text":"--code . PHP code","title":"Arguments"},{"location":"php_eval/#options","text":"--format[=FORMAT] . [default: var_export ]","title":"Options"},{"location":"php_eval/#aliases","text":"eval ev php-eval Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"php_script/","text":"php:script \u00b6 Run php a script after a full Drupal bootstrap. A useful alternative to eval command when your php is lengthy or you can't be bothered to figure out bash quoting. If you plan to share a script with others, consider making a full Drush command instead, since that's more self-documenting. Drush provides commandline options to the script via a variable called $extra . Examples \u00b6 drush php:script example --script-path=/path/to/scripts:/another/path . Run a script named example.php from specified paths drush php:script - . Run PHP code from standard input. drush php:script . List all available scripts. drush php:script foo -- apple --cider . Run foo.php script with argument apple and option cider . Note the -- separator. Arguments \u00b6 [--extra]... . Options \u00b6 --format[=FORMAT] . [default: var_export ] --script-path=SCRIPT-PATH . Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows). Aliases \u00b6 scr php-script Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"php:script"},{"location":"php_script/#phpscript","text":"Run php a script after a full Drupal bootstrap. A useful alternative to eval command when your php is lengthy or you can't be bothered to figure out bash quoting. If you plan to share a script with others, consider making a full Drush command instead, since that's more self-documenting. Drush provides commandline options to the script via a variable called $extra .","title":"php:script"},{"location":"php_script/#examples","text":"drush php:script example --script-path=/path/to/scripts:/another/path . Run a script named example.php from specified paths drush php:script - . Run PHP code from standard input. drush php:script . List all available scripts. drush php:script foo -- apple --cider . Run foo.php script with argument apple and option cider . Note the -- separator.","title":"Examples"},{"location":"php_script/#arguments","text":"[--extra]... .","title":"Arguments"},{"location":"php_script/#options","text":"--format[=FORMAT] . [default: var_export ] --script-path=SCRIPT-PATH . Additional paths to search for scripts, separated by : (Unix-based systems) or ; (Windows).","title":"Options"},{"location":"php_script/#aliases","text":"scr php-script Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"pm_enable/","text":"pm:enable \u00b6 Enable one or more modules. Arguments \u00b6 [--modules]... . A comma delimited list of modules. Aliases \u00b6 en pm-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"pm:enable"},{"location":"pm_enable/#pmenable","text":"Enable one or more modules.","title":"pm:enable"},{"location":"pm_enable/#arguments","text":"[--modules]... . A comma delimited list of modules.","title":"Arguments"},{"location":"pm_enable/#aliases","text":"en pm-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"pm_list/","text":"pm:list \u00b6 Show a list of available extensions (modules and themes). Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --type[=TYPE] . Only show extensions having a given type. Choices: module, theme. [default: module,theme ] --status[=STATUS] . Only show extensions having a given status. Choices: enabled or disabled. [default: enabled,disabled ] --package=PACKAGE . Only show extensions having a given project packages (e.g. Development). --core . Only show extensions that are in Drupal core. --no-core . Only show extensions that are not provided by Drupal core. --fields=FIELDS . Available fields: Package (package), Name (display_name), Name (name), Type (type), Path (path), Status (status), Version (version) [default: package,display_name,status,version ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 pml pm-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"pm:list"},{"location":"pm_list/#pmlist","text":"Show a list of available extensions (modules and themes).","title":"pm:list"},{"location":"pm_list/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --type[=TYPE] . Only show extensions having a given type. Choices: module, theme. [default: module,theme ] --status[=STATUS] . Only show extensions having a given status. Choices: enabled or disabled. [default: enabled,disabled ] --package=PACKAGE . Only show extensions having a given project packages (e.g. Development). --core . Only show extensions that are in Drupal core. --no-core . Only show extensions that are not provided by Drupal core. --fields=FIELDS . Available fields: Package (package), Name (display_name), Name (name), Type (type), Path (path), Status (status), Version (version) [default: package,display_name,status,version ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"pm_list/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"pm_list/#aliases","text":"pml pm-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"pm_security-php/","text":"pm:security-php \u00b6 Check non-Drupal PHP packages for pending security updates. Thanks to https://github.com/FriendsOfPHP/security-advisories and Symfony for providing this service. Examples \u00b6 drush pm:security-php --format=json . Get security data in JSON format. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Aliases \u00b6 sec-php pm-security-php Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"pm:security-php"},{"location":"pm_security-php/#pmsecurity-php","text":"Check non-Drupal PHP packages for pending security updates. Thanks to https://github.com/FriendsOfPHP/security-advisories and Symfony for providing this service.","title":"pm:security-php"},{"location":"pm_security-php/#examples","text":"drush pm:security-php --format=json . Get security data in JSON format.","title":"Examples"},{"location":"pm_security-php/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"pm_security-php/#aliases","text":"sec-php pm-security-php Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"pm_security/","text":"pm:security \u00b6 Check Drupal Composer packages for pending security updates. This uses the Drupal security advisories package to determine if updates are available. Options \u00b6 --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Name (name), Installed Version (version) [default: name,version ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 sec pm-security Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"pm:security"},{"location":"pm_security/#pmsecurity","text":"Check Drupal Composer packages for pending security updates. This uses the Drupal security advisories package to determine if updates are available.","title":"pm:security"},{"location":"pm_security/#options","text":"--format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Name (name), Installed Version (version) [default: name,version ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"pm_security/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"pm_security/#aliases","text":"sec pm-security Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"pm_uninstall/","text":"pm:uninstall \u00b6 Uninstall one or more modules and their dependent modules. Arguments \u00b6 [--modules]... . A comma delimited list of modules. Aliases \u00b6 pmu pm-uninstall Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"pm:uninstall"},{"location":"pm_uninstall/#pmuninstall","text":"Uninstall one or more modules and their dependent modules.","title":"pm:uninstall"},{"location":"pm_uninstall/#arguments","text":"[--modules]... . A comma delimited list of modules.","title":"Arguments"},{"location":"pm_uninstall/#aliases","text":"pmu pm-uninstall Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"queue_delete/","text":"queue:delete \u00b6 Delete all items in a specific queue. Arguments \u00b6 --name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info. Aliases \u00b6 queue-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"queue:delete"},{"location":"queue_delete/#queuedelete","text":"Delete all items in a specific queue.","title":"queue:delete"},{"location":"queue_delete/#arguments","text":"--name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info.","title":"Arguments"},{"location":"queue_delete/#aliases","text":"queue-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"queue_list/","text":"queue:list \u00b6 Returns a list of all defined queues. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Queue (queue), Items (items), Class (class) --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 queue-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"queue:list"},{"location":"queue_list/#queuelist","text":"Returns a list of all defined queues.","title":"queue:list"},{"location":"queue_list/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Queue (queue), Items (items), Class (class) --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"queue_list/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"queue_list/#aliases","text":"queue-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"queue_run/","text":"queue:run \u00b6 Run a specific queue by name. Arguments \u00b6 --name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info. Options \u00b6 --time-limit=TIME-LIMIT . The maximum number of seconds allowed to run the queue --items-limit[=ITEMS-LIMIT] . The maximum number of items allowed to run the queue Aliases \u00b6 queue-run Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"queue:run"},{"location":"queue_run/#queuerun","text":"Run a specific queue by name.","title":"queue:run"},{"location":"queue_run/#arguments","text":"--name . The name of the queue to run, as defined in either hook_queue_info or hook_cron_queue_info.","title":"Arguments"},{"location":"queue_run/#options","text":"--time-limit=TIME-LIMIT . The maximum number of seconds allowed to run the queue --items-limit[=ITEMS-LIMIT] . The maximum number of items allowed to run the queue","title":"Options"},{"location":"queue_run/#aliases","text":"queue-run Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"role_create/","text":"role:create \u00b6 Create a new role. Examples \u00b6 drush role:create 'test role' . Create a new role 'test role'. On D8, the human-readable name will be 'Test role'. drush role:create 'test role' 'Test role' . Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'. Arguments \u00b6 --machine_name . The symbolic machine name for the role. [--human_readable_name] . A descriptive name for the role. Aliases \u00b6 rcrt role-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"role:create"},{"location":"role_create/#rolecreate","text":"Create a new role.","title":"role:create"},{"location":"role_create/#examples","text":"drush role:create 'test role' . Create a new role 'test role'. On D8, the human-readable name will be 'Test role'. drush role:create 'test role' 'Test role' . Create a new role with a machine name of 'test role', and a human-readable name of 'Test role'.","title":"Examples"},{"location":"role_create/#arguments","text":"--machine_name . The symbolic machine name for the role. [--human_readable_name] . A descriptive name for the role.","title":"Arguments"},{"location":"role_create/#aliases","text":"rcrt role-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"role_delete/","text":"role:delete \u00b6 Delete a new role. Examples \u00b6 drush role:delete 'test role' . Delete the role 'test role'. Arguments \u00b6 --machine_name . The symbolic machine name for the role. Aliases \u00b6 rdel role-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"role:delete"},{"location":"role_delete/#roledelete","text":"Delete a new role.","title":"role:delete"},{"location":"role_delete/#examples","text":"drush role:delete 'test role' . Delete the role 'test role'.","title":"Examples"},{"location":"role_delete/#arguments","text":"--machine_name . The symbolic machine name for the role.","title":"Arguments"},{"location":"role_delete/#aliases","text":"rdel role-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"role_list/","text":"role:list \u00b6 Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed. Examples \u00b6 drush role:list --filter='administer nodes' . Display a list of roles that have the administer nodes permission assigned. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Available fields: ID (rid), Role Label (label), Permissions (perms) --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 rls role-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"role:list"},{"location":"role_list/#rolelist","text":"Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.","title":"role:list"},{"location":"role_list/#examples","text":"drush role:list --filter='administer nodes' . Display a list of roles that have the administer nodes permission assigned.","title":"Examples"},{"location":"role_list/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Available fields: ID (rid), Role Label (label), Permissions (perms) --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"role_list/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"role_list/#aliases","text":"rls role-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"role_perm_add/","text":"role:perm:add \u00b6 Grant specified permission(s) to a role. Examples \u00b6 drush role-add-perm anonymous 'post comments' . Allow anon users to post comments. drush role:add-perm anonymous \"'post comments','access content'\" . Allow anon users to post comments and access content. drush pm:info --fields=permissions --format=csv aggregator . Discover the permissions associated with given module (then use this command as needed). Arguments \u00b6 --machine_name . The role to modify. --permissions . The list of permission to grant, delimited by commas. Aliases \u00b6 rap role-add-perm Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"role:perm:add"},{"location":"role_perm_add/#rolepermadd","text":"Grant specified permission(s) to a role.","title":"role:perm:add"},{"location":"role_perm_add/#examples","text":"drush role-add-perm anonymous 'post comments' . Allow anon users to post comments. drush role:add-perm anonymous \"'post comments','access content'\" . Allow anon users to post comments and access content. drush pm:info --fields=permissions --format=csv aggregator . Discover the permissions associated with given module (then use this command as needed).","title":"Examples"},{"location":"role_perm_add/#arguments","text":"--machine_name . The role to modify. --permissions . The list of permission to grant, delimited by commas.","title":"Arguments"},{"location":"role_perm_add/#aliases","text":"rap role-add-perm Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"role_perm_remove/","text":"role:perm:remove \u00b6 Remove specified permission(s) from a role. Examples \u00b6 drush role:remove-perm anonymous 'access content' . Hide content from anon users. Arguments \u00b6 --machine_name . The role to modify. --permissions . The list of permission to grant, delimited by commas. Aliases \u00b6 rmp role-remove-perm Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"role:perm:remove"},{"location":"role_perm_remove/#rolepermremove","text":"Remove specified permission(s) from a role.","title":"role:perm:remove"},{"location":"role_perm_remove/#examples","text":"drush role:remove-perm anonymous 'access content' . Hide content from anon users.","title":"Examples"},{"location":"role_perm_remove/#arguments","text":"--machine_name . The role to modify. --permissions . The list of permission to grant, delimited by commas.","title":"Arguments"},{"location":"role_perm_remove/#aliases","text":"rmp role-remove-perm Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"runserver/","text":"runserver \u00b6 Runs PHP's built-in http server for development. Don't use this for production, it is neither scalable nor secure for this use. If you run multiple servers simultaneously, you will need to assign each a unique port. Use Ctrl-C or equivalent to stop the server when complete. Examples \u00b6 drush rs 8080 . Start a web server on 127.0.0.1, port 8080. drush rs 10.0.0.28:80 . Start runserver on 10.0.0.28, port 80. drush rs [::1]:80 . Start runserver on IPv6 localhost ::1, port 80. drush rs --dns localhost:8888/user . Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser. drush rs / . Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser. drush rs :9000/admin . Start runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP. drush --quiet rs . Silence logging the printing of web requests to the console. Arguments \u00b6 [--uri] . Host IP address and port number to bind to and path to open in web browser. Format is addr:port/path. Only opens a browser if a path is specified. Options \u00b6 --default-server=DEFAULT-SERVER . A default addr:port/path to use for any values not specified as an argument. --browser[=BROWSER] . If opening a web browser, which browser to use (defaults to operating system default). Use --no-browser to avoid opening a browser. [default: 1 ] --dns . Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser. --no-browser . Negate --browser option. Aliases \u00b6 rs serve Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"runserver"},{"location":"runserver/#runserver","text":"Runs PHP's built-in http server for development. Don't use this for production, it is neither scalable nor secure for this use. If you run multiple servers simultaneously, you will need to assign each a unique port. Use Ctrl-C or equivalent to stop the server when complete.","title":"runserver"},{"location":"runserver/#examples","text":"drush rs 8080 . Start a web server on 127.0.0.1, port 8080. drush rs 10.0.0.28:80 . Start runserver on 10.0.0.28, port 80. drush rs [::1]:80 . Start runserver on IPv6 localhost ::1, port 80. drush rs --dns localhost:8888/user . Start runserver on localhost (using rDNS to determine binding IP), port 8888, and open /user in browser. drush rs / . Start runserver on default IP/port (127.0.0.1, port 8888), and open / in browser. drush rs :9000/admin . Start runserver on 127.0.0.1, port 9000, and open /admin in browser. Note that you need a colon when you specify port and path, but no IP. drush --quiet rs . Silence logging the printing of web requests to the console.","title":"Examples"},{"location":"runserver/#arguments","text":"[--uri] . Host IP address and port number to bind to and path to open in web browser. Format is addr:port/path. Only opens a browser if a path is specified.","title":"Arguments"},{"location":"runserver/#options","text":"--default-server=DEFAULT-SERVER . A default addr:port/path to use for any values not specified as an argument. --browser[=BROWSER] . If opening a web browser, which browser to use (defaults to operating system default). Use --no-browser to avoid opening a browser. [default: 1 ] --dns . Resolve hostnames/IPs using DNS/rDNS (if possible) to determine binding IPs and/or human friendly hostnames for URLs and browser. --no-browser . Negate --browser option.","title":"Options"},{"location":"runserver/#aliases","text":"rs serve Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"site_alias-convert/","text":"site:alias-convert \u00b6 Convert legacy site alias files to the new yml format. Examples \u00b6 drush site:alias-convert . Find legacy alias files and convert them to yml. You will be prompted for a destination directory. drush site:alias-convert --simulate . List the files to be converted but do not actually do anything. Arguments \u00b6 --destination . An absolute path to a directory for writing new alias files.If omitted, user will be prompted. Options \u00b6 --format[=FORMAT] . [default: yaml ] --sources=SOURCES . A comma delimited list of paths to search. Overrides the default paths. Aliases \u00b6 sa-convert sac Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"site:alias-convert"},{"location":"site_alias-convert/#sitealias-convert","text":"Convert legacy site alias files to the new yml format.","title":"site:alias-convert"},{"location":"site_alias-convert/#examples","text":"drush site:alias-convert . Find legacy alias files and convert them to yml. You will be prompted for a destination directory. drush site:alias-convert --simulate . List the files to be converted but do not actually do anything.","title":"Examples"},{"location":"site_alias-convert/#arguments","text":"--destination . An absolute path to a directory for writing new alias files.If omitted, user will be prompted.","title":"Arguments"},{"location":"site_alias-convert/#options","text":"--format[=FORMAT] . [default: yaml ] --sources=SOURCES . A comma delimited list of paths to search. Overrides the default paths.","title":"Options"},{"location":"site_alias-convert/#aliases","text":"sa-convert sac Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"site_alias/","text":"site:alias \u00b6 Show site alias details, or a list of available site aliases. Examples \u00b6 drush site:alias . List all alias records known to drush. drush site:alias @dev . Print an alias record for the alias 'dev'. Arguments \u00b6 [--site] . Site alias or site specification. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Creating site aliases for running Drush on remote sites. (docs:aliases) Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 sa Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"site:alias"},{"location":"site_alias/#sitealias","text":"Show site alias details, or a list of available site aliases.","title":"site:alias"},{"location":"site_alias/#examples","text":"drush site:alias . List all alias records known to drush. drush site:alias @dev . Print an alias record for the alias 'dev'.","title":"Examples"},{"location":"site_alias/#arguments","text":"[--site] . Site alias or site specification.","title":"Arguments"},{"location":"site_alias/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"site_alias/#topics","text":"Creating site aliases for running Drush on remote sites. (docs:aliases) Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"site_alias/#aliases","text":"sa Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"site_install/","text":"site:install \u00b6 Install Drupal along with modules/themes/configuration/profile. Examples \u00b6 drush si expert --locale=uk . (Re)install using the expert install profile. Set default language to Ukrainian. drush si --db-url=mysql://root:pass@localhost:port/dbname . Install using the specified DB params. drush si --db-url=sqlite://sites/example.com/files/.ht.sqlite . Install using SQLite drush si --account-pass=mom . Re-install with specified uid1 password. drush si --existing-config . Install based on the yml files stored in the config export/import directory. drush si standard install_configure_form.enable_update_status_emails=NULL . Disable email notification during install and later. If your server has no mail transfer agent, this gets rid of an error during install. Arguments \u00b6 [--profile]... . An install profile name. Defaults to standard unless an install profile is marked as a distribution. Additional info for the install profile may also be provided with additional arguments. The key is in the form [form name].[parameter name] Options \u00b6 --db-url=DB-URL . A Drupal 6 style database URL. Required for initial install, not re-install. If omitted and required, Drush prompts for this item. --db-prefix=DB-PREFIX . An optional table prefix to use for initial install. --db-su=DB-SU . Account to use when creating a new database. Must have Grant permission (mysql only). Optional. --db-su-pw=DB-SU-PW . Password for the db-su account. Optional. --account-name[=ACCOUNT-NAME] . uid1 name. [default: admin ] --account-mail[=ACCOUNT-MAIL] . uid1 email. [default: admin@example.com ] --site-mail[=SITE-MAIL] . From: for system mailings. [default: admin@example.com ] --account-pass=ACCOUNT-PASS . uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in config.yml. --locale[=LOCALE] . A short language code. Sets the default site language. Language files must already be present. [default: en ] --site-name[=SITE-NAME] . [default: Drush Site-Install ] --site-pass=SITE-PASS . --sites-subdir=SITES-SUBDIR . Name of directory under sites which should be created. --config-dir=CONFIG-DIR . Deprecated - only use with Drupal 8.5-. A path pointing to a full set of configuration which should be installed during installation. --existing-config . Configuration from sync directory should be imported during installation. Use with Drupal 8.6+. Aliases \u00b6 si sin site-install Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"site:install"},{"location":"site_install/#siteinstall","text":"Install Drupal along with modules/themes/configuration/profile.","title":"site:install"},{"location":"site_install/#examples","text":"drush si expert --locale=uk . (Re)install using the expert install profile. Set default language to Ukrainian. drush si --db-url=mysql://root:pass@localhost:port/dbname . Install using the specified DB params. drush si --db-url=sqlite://sites/example.com/files/.ht.sqlite . Install using SQLite drush si --account-pass=mom . Re-install with specified uid1 password. drush si --existing-config . Install based on the yml files stored in the config export/import directory. drush si standard install_configure_form.enable_update_status_emails=NULL . Disable email notification during install and later. If your server has no mail transfer agent, this gets rid of an error during install.","title":"Examples"},{"location":"site_install/#arguments","text":"[--profile]... . An install profile name. Defaults to standard unless an install profile is marked as a distribution. Additional info for the install profile may also be provided with additional arguments. The key is in the form [form name].[parameter name]","title":"Arguments"},{"location":"site_install/#options","text":"--db-url=DB-URL . A Drupal 6 style database URL. Required for initial install, not re-install. If omitted and required, Drush prompts for this item. --db-prefix=DB-PREFIX . An optional table prefix to use for initial install. --db-su=DB-SU . Account to use when creating a new database. Must have Grant permission (mysql only). Optional. --db-su-pw=DB-SU-PW . Password for the db-su account. Optional. --account-name[=ACCOUNT-NAME] . uid1 name. [default: admin ] --account-mail[=ACCOUNT-MAIL] . uid1 email. [default: admin@example.com ] --site-mail[=SITE-MAIL] . From: for system mailings. [default: admin@example.com ] --account-pass=ACCOUNT-PASS . uid1 pass. Defaults to a randomly generated password. If desired, set a fixed password in config.yml. --locale[=LOCALE] . A short language code. Sets the default site language. Language files must already be present. [default: en ] --site-name[=SITE-NAME] . [default: Drush Site-Install ] --site-pass=SITE-PASS . --sites-subdir=SITES-SUBDIR . Name of directory under sites which should be created. --config-dir=CONFIG-DIR . Deprecated - only use with Drupal 8.5-. A path pointing to a full set of configuration which should be installed during installation. --existing-config . Configuration from sync directory should be imported during installation. Use with Drupal 8.6+.","title":"Options"},{"location":"site_install/#aliases","text":"si sin site-install Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"site_set/","text":"site:set \u00b6 Set a site alias that will persist for the current session. Stores the site alias being used in the current session in a temporary file. Examples \u00b6 drush site:set @dev . Set the current session to use the @dev alias. drush site:set user@server/path/to/drupal#sitename . Set the current session to use a remote site via site specification. drush site:set /path/to/drupal#sitename . Set the current session to use a local site via site specification. drush site:set - . Go back to the previously-set site (like cd - ). drush site:set . Without an argument, any existing site becomes unset. Arguments \u00b6 [--site] . Site specification to use, or - for previous site. Omit this argument to unset. Aliases \u00b6 use site-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"site:set"},{"location":"site_set/#siteset","text":"Set a site alias that will persist for the current session. Stores the site alias being used in the current session in a temporary file.","title":"site:set"},{"location":"site_set/#examples","text":"drush site:set @dev . Set the current session to use the @dev alias. drush site:set user@server/path/to/drupal#sitename . Set the current session to use a remote site via site specification. drush site:set /path/to/drupal#sitename . Set the current session to use a local site via site specification. drush site:set - . Go back to the previously-set site (like cd - ). drush site:set . Without an argument, any existing site becomes unset.","title":"Examples"},{"location":"site_set/#arguments","text":"[--site] . Site specification to use, or - for previous site. Omit this argument to unset.","title":"Arguments"},{"location":"site_set/#aliases","text":"use site-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"site_ssh/","text":"site:ssh \u00b6 Connect to a Drupal site's server via SSH, and optionally run a shell command. Examples \u00b6 drush @mysite ssh . Open an interactive shell on @mysite's server. drush @prod ssh ls /tmp . Run \"ls /tmp\" on @prod site. drush @prod ssh git pull . Run \"git pull\" on the Drupal root directory on the @prod site. drush ssh git pull . Run \"git pull\" on the local Drupal root directory. Arguments \u00b6 [--code]... . Code which should run at remote host. Options \u00b6 --cd=CD . Directory to change to. Defaults to Drupal root. --tty . Create a tty (e.g. to run an interactive program). --ssh-options=SSH-OPTIONS . A string of extra options that will be passed to the ssh command (e.g. -p 100 ) Topics \u00b6 Creating site aliases for running Drush on remote sites. (docs:aliases) Aliases \u00b6 ssh site-ssh Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"site:ssh"},{"location":"site_ssh/#sitessh","text":"Connect to a Drupal site's server via SSH, and optionally run a shell command.","title":"site:ssh"},{"location":"site_ssh/#examples","text":"drush @mysite ssh . Open an interactive shell on @mysite's server. drush @prod ssh ls /tmp . Run \"ls /tmp\" on @prod site. drush @prod ssh git pull . Run \"git pull\" on the Drupal root directory on the @prod site. drush ssh git pull . Run \"git pull\" on the local Drupal root directory.","title":"Examples"},{"location":"site_ssh/#arguments","text":"[--code]... . Code which should run at remote host.","title":"Arguments"},{"location":"site_ssh/#options","text":"--cd=CD . Directory to change to. Defaults to Drupal root. --tty . Create a tty (e.g. to run an interactive program). --ssh-options=SSH-OPTIONS . A string of extra options that will be passed to the ssh command (e.g. -p 100 )","title":"Options"},{"location":"site_ssh/#topics","text":"Creating site aliases for running Drush on remote sites. (docs:aliases)","title":"Topics"},{"location":"site_ssh/#aliases","text":"ssh site-ssh Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_cli/","text":"sql:cli \u00b6 Open a SQL command-line interface using Drupal's credentials. Examples \u00b6 drush sql:cli . Open a SQL command-line interface using Drupal's credentials. drush sql:cli --extra=--progress-reports . Open a SQL CLI and skip reading table information. drush sql:cli < example.sql . Import sql statements from a file into the current database. Options \u00b6 --extra=EXTRA . Add custom options to the connect string --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. Aliases \u00b6 sqlc sql-cli Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:cli"},{"location":"sql_cli/#sqlcli","text":"Open a SQL command-line interface using Drupal's credentials.","title":"sql:cli"},{"location":"sql_cli/#examples","text":"drush sql:cli . Open a SQL command-line interface using Drupal's credentials. drush sql:cli --extra=--progress-reports . Open a SQL CLI and skip reading table information. drush sql:cli < example.sql . Import sql statements from a file into the current database.","title":"Examples"},{"location":"sql_cli/#options","text":"--extra=EXTRA . Add custom options to the connect string --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging.","title":"Options"},{"location":"sql_cli/#aliases","text":"sqlc sql-cli Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_connect/","text":"sql:connect \u00b6 A string for connecting to the DB. Examples \u00b6 $(drush sql-connect) < example.sql . Bash: Import SQL statements from a file into the current database. eval (drush sql-connect) < example.sql . Fish: Import SQL statements from a file into the current database. Options \u00b6 --extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. Aliases \u00b6 sql-connect Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:connect"},{"location":"sql_connect/#sqlconnect","text":"A string for connecting to the DB.","title":"sql:connect"},{"location":"sql_connect/#examples","text":"$(drush sql-connect) < example.sql . Bash: Import SQL statements from a file into the current database. eval (drush sql-connect) < example.sql . Fish: Import SQL statements from a file into the current database.","title":"Examples"},{"location":"sql_connect/#options","text":"--extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging.","title":"Options"},{"location":"sql_connect/#aliases","text":"sql-connect Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_create/","text":"sql:create \u00b6 Create a database. Examples \u00b6 drush sql:create . Create the database for the current site. drush @site.test sql-create . Create the database as specified for @site.test. drush sql:create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql://drupal_db_user:drupal_db_password@127.0.0.1/drupal_db\" . Create the database as specified in the db-url option. Options \u00b6 --db-su=DB-SU . Account to use when creating a new database. --db-su-pw=DB-SU-PW . Password for the db-su account. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. Aliases \u00b6 sql-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:create"},{"location":"sql_create/#sqlcreate","text":"Create a database.","title":"sql:create"},{"location":"sql_create/#examples","text":"drush sql:create . Create the database for the current site. drush @site.test sql-create . Create the database as specified for @site.test. drush sql:create --db-su=root --db-su-pw=rootpassword --db-url=\"mysql://drupal_db_user:drupal_db_password@127.0.0.1/drupal_db\" . Create the database as specified in the db-url option.","title":"Examples"},{"location":"sql_create/#options","text":"--db-su=DB-SU . Account to use when creating a new database. --db-su-pw=DB-SU-PW . Password for the db-su account. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging.","title":"Options"},{"location":"sql_create/#aliases","text":"sql-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_drop/","text":"sql:drop \u00b6 Drop all tables in a given database. Options \u00b6 --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. Topics \u00b6 Example policy file. (docs:policy) Aliases \u00b6 sql-drop Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:drop"},{"location":"sql_drop/#sqldrop","text":"Drop all tables in a given database.","title":"sql:drop"},{"location":"sql_drop/#options","text":"--database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging.","title":"Options"},{"location":"sql_drop/#topics","text":"Example policy file. (docs:policy)","title":"Topics"},{"location":"sql_drop/#aliases","text":"sql-drop Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_dump/","text":"sql:dump \u00b6 Exports the Drupal DB as SQL using mysqldump or equivalent. Examples \u00b6 drush sql:dump --result-file=../18.sql . Save SQL dump to the directory above Drupal root. drush sql:dump --skip-tables-key=common . Skip standard tables. See examples/example.drush.yml drush sql:dump --extra-dump=--no-data . Pass extra option to mysqldump command. Options \u00b6 --result-file=RESULT-FILE . Save to a file. The file should be relative to Drupal root. If --result-file is provided with the value 'auto', a date-based filename will be created under ~/drush-backups directory. --create-db . Omit DROP TABLE statements. Used by Postgres and Oracle only. --data-only . Dump data without statements to create any of the schema. --ordered-dump . Order by primary key and add line breaks for efficient diffs. Slows down the dump. Mysql only. --gzip . Compress the dump using the gzip program which must be in your $PATH . --extra=EXTRA . Add custom arguments/options when connecting to database (used internally to list tables). --extra-dump=EXTRA-DUMP . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null ] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. --skip-tables-key=SKIP-TABLES-KEY . A key in the $skip_tables array. @see example.drush.yml --structure-tables-key=STRUCTURE-TABLES-KEY . A key in the $structure_tables array. @see example.drush.yml --tables-key=TABLES-KEY . A key in the $tables array. --skip-tables-list=SKIP-TABLES-LIST . A comma-separated list of tables to exclude completely. --structure-tables-list=STRUCTURE-TABLES-LIST . A comma-separated list of tables to include for structure, but not data. --tables-list=TABLES-LIST . A comma-separated list of tables to transfer. Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 sql-dump Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:dump"},{"location":"sql_dump/#sqldump","text":"Exports the Drupal DB as SQL using mysqldump or equivalent.","title":"sql:dump"},{"location":"sql_dump/#examples","text":"drush sql:dump --result-file=../18.sql . Save SQL dump to the directory above Drupal root. drush sql:dump --skip-tables-key=common . Skip standard tables. See examples/example.drush.yml drush sql:dump --extra-dump=--no-data . Pass extra option to mysqldump command.","title":"Examples"},{"location":"sql_dump/#options","text":"--result-file=RESULT-FILE . Save to a file. The file should be relative to Drupal root. If --result-file is provided with the value 'auto', a date-based filename will be created under ~/drush-backups directory. --create-db . Omit DROP TABLE statements. Used by Postgres and Oracle only. --data-only . Dump data without statements to create any of the schema. --ordered-dump . Order by primary key and add line breaks for efficient diffs. Slows down the dump. Mysql only. --gzip . Compress the dump using the gzip program which must be in your $PATH . --extra=EXTRA . Add custom arguments/options when connecting to database (used internally to list tables). --extra-dump=EXTRA-DUMP . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: null ] --fields=FIELDS . Available fields: Path (path) --field=FIELD . Select just one field, and force format to 'string'. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. --skip-tables-key=SKIP-TABLES-KEY . A key in the $skip_tables array. @see example.drush.yml --structure-tables-key=STRUCTURE-TABLES-KEY . A key in the $structure_tables array. @see example.drush.yml --tables-key=TABLES-KEY . A key in the $tables array. --skip-tables-list=SKIP-TABLES-LIST . A comma-separated list of tables to exclude completely. --structure-tables-list=STRUCTURE-TABLES-LIST . A comma-separated list of tables to include for structure, but not data. --tables-list=TABLES-LIST . A comma-separated list of tables to transfer.","title":"Options"},{"location":"sql_dump/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"sql_dump/#aliases","text":"sql-dump Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_query/","text":"sql:query \u00b6 Execute a query against a database. Examples \u00b6 drush sql:query \"SELECT * FROM users WHERE uid=1\" . Browse user record. Table prefixes, if used, must be added to table names by hand. drush sql:query --db-prefix \"SELECT * FROM {users}\" . Browse user record. Table prefixes are honored. Caution: All curly-braces will be stripped. $(drush sql-connect) < example.sql . Import sql statements from a file into the current database. drush sql:query --file=example.sql . Alternate way to import sql statements from a file. drush @d8 ev \"return db_query('SELECT * FROM users')->fetchAll()\" --format=json . Get data back in JSON format. See https://github.com/drush-ops/drush/issues/3071#issuecomment-347929777 . Arguments \u00b6 [--query] . An SQL query. Ignored if --file is provided. Options \u00b6 --result-file[=RESULT-FILE] . Save to a file. The file should be relative to Drupal root. --file=FILE . Path to a file containing the SQL to be run. Gzip files are accepted. --file-delete . Delete the --file after running it. --extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) --db-prefix . Enable replacement of braces in your query. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging. Aliases \u00b6 sqlq sql-query Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:query"},{"location":"sql_query/#sqlquery","text":"Execute a query against a database.","title":"sql:query"},{"location":"sql_query/#examples","text":"drush sql:query \"SELECT * FROM users WHERE uid=1\" . Browse user record. Table prefixes, if used, must be added to table names by hand. drush sql:query --db-prefix \"SELECT * FROM {users}\" . Browse user record. Table prefixes are honored. Caution: All curly-braces will be stripped. $(drush sql-connect) < example.sql . Import sql statements from a file into the current database. drush sql:query --file=example.sql . Alternate way to import sql statements from a file. drush @d8 ev \"return db_query('SELECT * FROM users')->fetchAll()\" --format=json . Get data back in JSON format. See https://github.com/drush-ops/drush/issues/3071#issuecomment-347929777 .","title":"Examples"},{"location":"sql_query/#arguments","text":"[--query] . An SQL query. Ignored if --file is provided.","title":"Arguments"},{"location":"sql_query/#options","text":"--result-file[=RESULT-FILE] . Save to a file. The file should be relative to Drupal root. --file=FILE . Path to a file containing the SQL to be run. Gzip files are accepted. --file-delete . Delete the --file after running it. --extra=EXTRA . Add custom options to the connect string (e.g. --extra=--skip-column-names) --db-prefix . Enable replacement of braces in your query. --database[=DATABASE] . The DB connection key if using multiple connections in settings.php. [default: default ] --target[=TARGET] . The name of a target within the specified database connection. [default: default ] --db-url=DB-URL . A Drupal 6 style database URL. For example mysql://root:pass@localhost:port/dbname --show-passwords . Show password on the CLI. Useful for debugging.","title":"Options"},{"location":"sql_query/#aliases","text":"sqlq sql-query Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_sanitize/","text":"sql:sanitize \u00b6 Sanitize the database by removing or obfuscating user data. Commandfiles may add custom operations by implementing: - @hook_on-event sql-sanitize-message Display summary to user before confirmation. - @hook post-command sql-sanitize Run queries or call APIs to perform sanitizing Examples \u00b6 drush sql:sanitize --sanitize-password=no . Sanitize database without modifying any passwords. drush sql:sanitize --allowlist-fields=field_biography,field_phone_number . Sanitizes database but exempts two user fields from modification. Options \u00b6 --whitelist-fields[=WHITELIST-FIELDS] . Deprecated. Use allowlist-fields instead. --allowlist-fields[=ALLOWLIST-FIELDS] . A comma delimited list of fields exempt from sanitization. --sanitize-email[=SANITIZE-EMAIL] . The pattern for test email addresses in the sanitization operation, or \"no\" to keep email addresses unchanged. May contain replacement patterns %uid, %mail or %name. [default: user+% uid@localhost.localdomain ] --sanitize-password[=SANITIZE-PASSWORD] . By default, passwords are randomized. Specify 'no' to disable that. Specify any other value to set all passwords to that value. Aliases \u00b6 sqlsan sql-sanitize Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:sanitize"},{"location":"sql_sanitize/#sqlsanitize","text":"Sanitize the database by removing or obfuscating user data. Commandfiles may add custom operations by implementing: - @hook_on-event sql-sanitize-message Display summary to user before confirmation. - @hook post-command sql-sanitize Run queries or call APIs to perform sanitizing","title":"sql:sanitize"},{"location":"sql_sanitize/#examples","text":"drush sql:sanitize --sanitize-password=no . Sanitize database without modifying any passwords. drush sql:sanitize --allowlist-fields=field_biography,field_phone_number . Sanitizes database but exempts two user fields from modification.","title":"Examples"},{"location":"sql_sanitize/#options","text":"--whitelist-fields[=WHITELIST-FIELDS] . Deprecated. Use allowlist-fields instead. --allowlist-fields[=ALLOWLIST-FIELDS] . A comma delimited list of fields exempt from sanitization. --sanitize-email[=SANITIZE-EMAIL] . The pattern for test email addresses in the sanitization operation, or \"no\" to keep email addresses unchanged. May contain replacement patterns %uid, %mail or %name. [default: user+% uid@localhost.localdomain ] --sanitize-password[=SANITIZE-PASSWORD] . By default, passwords are randomized. Specify 'no' to disable that. Specify any other value to set all passwords to that value.","title":"Options"},{"location":"sql_sanitize/#aliases","text":"sqlsan sql-sanitize Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"sql_sync/","text":"sql:sync \u00b6 Copy DB data from a source site to a target site. Transfers data via rsync. Examples \u00b6 drush sql:sync @source @self . Copy the database from the site with the alias 'source' to the local site. drush sql:sync @self @target . Copy the database from the local site to the site with the alias 'target'. drush sql:sync #prod #dev . Copy the database from the site in /sites/prod to the site in /sites/dev (multisite installation). Arguments \u00b6 --source . A site-alias or the name of a subdirectory within /sites whose database you want to copy from. --target . A site-alias or the name of a subdirectory within /sites whose database you want to replace. Options \u00b6 --no-dump . Do not dump the sql database; always use an existing dump file. --no-sync . Do not rsync the database dump file from source to target. --runner=RUNNER . Where to run the rsync command; defaults to the local site. Can also be source or target . --create-db . Create a new database before importing the database dump on the target machine. --db-su=DB-SU . Account to use when creating a new database (e.g. root ). --db-su-pw=DB-SU-PW . Password for the db-su account. --target-dump=TARGET-DUMP . The path for storing the sql-dump on target machine. --source-dump[=SOURCE-DUMP] . The path for retrieving the sql-dump on source machine. --extra-dump[=EXTRA-DUMP] . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). --skip-tables-key=SKIP-TABLES-KEY . A key in the $skip_tables array. @see example.drush.yml --structure-tables-key=STRUCTURE-TABLES-KEY . A key in the $structure_tables array. @see example.drush.yml --tables-key=TABLES-KEY . A key in the $tables array. --skip-tables-list=SKIP-TABLES-LIST . A comma-separated list of tables to exclude completely. --structure-tables-list=STRUCTURE-TABLES-LIST . A comma-separated list of tables to include for structure, but not data. --tables-list=TABLES-LIST . A comma-separated list of tables to transfer. Topics \u00b6 Creating site aliases for running Drush on remote sites. (docs:aliases) Example policy file. (docs:policy) Configuration overview with examples from example.drush.yml. (docs:configuration) Extend sql-sync to allow transfer of the sql dump file via http. (docs:example-sync-via-http) Aliases \u00b6 sql-sync Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"sql:sync"},{"location":"sql_sync/#sqlsync","text":"Copy DB data from a source site to a target site. Transfers data via rsync.","title":"sql:sync"},{"location":"sql_sync/#examples","text":"drush sql:sync @source @self . Copy the database from the site with the alias 'source' to the local site. drush sql:sync @self @target . Copy the database from the local site to the site with the alias 'target'. drush sql:sync #prod #dev . Copy the database from the site in /sites/prod to the site in /sites/dev (multisite installation).","title":"Examples"},{"location":"sql_sync/#arguments","text":"--source . A site-alias or the name of a subdirectory within /sites whose database you want to copy from. --target . A site-alias or the name of a subdirectory within /sites whose database you want to replace.","title":"Arguments"},{"location":"sql_sync/#options","text":"--no-dump . Do not dump the sql database; always use an existing dump file. --no-sync . Do not rsync the database dump file from source to target. --runner=RUNNER . Where to run the rsync command; defaults to the local site. Can also be source or target . --create-db . Create a new database before importing the database dump on the target machine. --db-su=DB-SU . Account to use when creating a new database (e.g. root ). --db-su-pw=DB-SU-PW . Password for the db-su account. --target-dump=TARGET-DUMP . The path for storing the sql-dump on target machine. --source-dump[=SOURCE-DUMP] . The path for retrieving the sql-dump on source machine. --extra-dump[=EXTRA-DUMP] . Add custom arguments/options to the dumping of the database (e.g. mysqldump command). --skip-tables-key=SKIP-TABLES-KEY . A key in the $skip_tables array. @see example.drush.yml --structure-tables-key=STRUCTURE-TABLES-KEY . A key in the $structure_tables array. @see example.drush.yml --tables-key=TABLES-KEY . A key in the $tables array. --skip-tables-list=SKIP-TABLES-LIST . A comma-separated list of tables to exclude completely. --structure-tables-list=STRUCTURE-TABLES-LIST . A comma-separated list of tables to include for structure, but not data. --tables-list=TABLES-LIST . A comma-separated list of tables to transfer.","title":"Options"},{"location":"sql_sync/#topics","text":"Creating site aliases for running Drush on remote sites. (docs:aliases) Example policy file. (docs:policy) Configuration overview with examples from example.drush.yml. (docs:configuration) Extend sql-sync to allow transfer of the sql dump file via http. (docs:example-sync-via-http)","title":"Topics"},{"location":"sql_sync/#aliases","text":"sql-sync Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"state_delete/","text":"state:delete \u00b6 Delete a state entry. Examples \u00b6 drush state:del system.cron_last . Delete state entry for system.cron_last. Arguments \u00b6 --key . The state key, for example system.cron_last . Aliases \u00b6 sdel state-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"state:delete"},{"location":"state_delete/#statedelete","text":"Delete a state entry.","title":"state:delete"},{"location":"state_delete/#examples","text":"drush state:del system.cron_last . Delete state entry for system.cron_last.","title":"Examples"},{"location":"state_delete/#arguments","text":"--key . The state key, for example system.cron_last .","title":"Arguments"},{"location":"state_delete/#aliases","text":"sdel state-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"state_get/","text":"state:get \u00b6 Display a state value. Examples \u00b6 drush state:get system.cron_last . Displays last cron run timestamp drush state:get drupal_css_cache_files --format=yaml . Displays an array of css files in yaml format. Arguments \u00b6 --key . The key name. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: string ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Aliases \u00b6 sget state-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"state:get"},{"location":"state_get/#stateget","text":"Display a state value.","title":"state:get"},{"location":"state_get/#examples","text":"drush state:get system.cron_last . Displays last cron run timestamp drush state:get drupal_css_cache_files --format=yaml . Displays an array of css files in yaml format.","title":"Examples"},{"location":"state_get/#arguments","text":"--key . The key name.","title":"Arguments"},{"location":"state_get/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: string ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"state_get/#aliases","text":"sget state-get Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"state_set/","text":"state:set \u00b6 Set a state value. Examples \u00b6 drush sset system.maintenance_mode 1 --input-format=integer . Put site into Maintenance mode. drush state:set system.cron_last 1406682882 --input-format=integer . Sets a timestamp for last cron run. php -r \"print json_encode(array(\\'drupal\\', \\'simpletest\\'));\" | drush state-set --input-format=json foo.name - . Set a key to a complex value (e.g. array) Arguments \u00b6 --key . The state key, for example: system.cron_last . --value . The value to assign to the state key. Use - to read from STDIN. Options \u00b6 --input-format[=INPUT-FORMAT] . Type for the value. Other recognized values: string, integer, float, boolean, json, yaml. [default: auto ] --value=VALUE . For internal use only. Aliases \u00b6 sset state-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"state:set"},{"location":"state_set/#stateset","text":"Set a state value.","title":"state:set"},{"location":"state_set/#examples","text":"drush sset system.maintenance_mode 1 --input-format=integer . Put site into Maintenance mode. drush state:set system.cron_last 1406682882 --input-format=integer . Sets a timestamp for last cron run. php -r \"print json_encode(array(\\'drupal\\', \\'simpletest\\'));\" | drush state-set --input-format=json foo.name - . Set a key to a complex value (e.g. array)","title":"Examples"},{"location":"state_set/#arguments","text":"--key . The state key, for example: system.cron_last . --value . The value to assign to the state key. Use - to read from STDIN.","title":"Arguments"},{"location":"state_set/#options","text":"--input-format[=INPUT-FORMAT] . Type for the value. Other recognized values: string, integer, float, boolean, json, yaml. [default: auto ] --value=VALUE . For internal use only.","title":"Options"},{"location":"state_set/#aliases","text":"sset state-set Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"theme_enable/","text":"theme:enable \u00b6 Enable one or more themes. Arguments \u00b6 [--themes]... . A comma delimited list of themes. Aliases \u00b6 then theme-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"theme:enable"},{"location":"theme_enable/#themeenable","text":"Enable one or more themes.","title":"theme:enable"},{"location":"theme_enable/#arguments","text":"[--themes]... . A comma delimited list of themes.","title":"Arguments"},{"location":"theme_enable/#aliases","text":"then theme-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"theme_uninstall/","text":"theme:uninstall \u00b6 Uninstall theme. Arguments \u00b6 [--themes]... . A comma delimited list of themes. Aliases \u00b6 thun theme-uninstall Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"theme:uninstall"},{"location":"theme_uninstall/#themeuninstall","text":"Uninstall theme.","title":"theme:uninstall"},{"location":"theme_uninstall/#arguments","text":"[--themes]... . A comma delimited list of themes.","title":"Arguments"},{"location":"theme_uninstall/#aliases","text":"thun theme-uninstall Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"twig_compile/","text":"twig:compile \u00b6 Compile all Twig template(s). Aliases \u00b6 twigc twig-compile Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"twig:compile"},{"location":"twig_compile/#twigcompile","text":"Compile all Twig template(s).","title":"twig:compile"},{"location":"twig_compile/#aliases","text":"twigc twig-compile Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"twig_unused/","text":"twig:unused \u00b6 Find potentially unused Twig templates. Immediately before running this command, web crawl your entire web site. Or use your Production PHPStorage dir for comparison. Examples \u00b6 drush twig:unused --field=template /var/www/mass.local/docroot/modules/custom,/var/www/mass.local/docroot/themes/custom . Output a simple list of potentially unused templates. Arguments \u00b6 --searchpaths . A comma delimited list of paths to recursively search Options \u00b6 --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Template (template), Compiled (compiled) [default: template,compiled ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"twig:unused"},{"location":"twig_unused/#twigunused","text":"Find potentially unused Twig templates. Immediately before running this command, web crawl your entire web site. Or use your Production PHPStorage dir for comparison.","title":"twig:unused"},{"location":"twig_unused/#examples","text":"drush twig:unused --field=template /var/www/mass.local/docroot/modules/custom,/var/www/mass.local/docroot/themes/custom . Output a simple list of potentially unused templates.","title":"Examples"},{"location":"twig_unused/#arguments","text":"--searchpaths . A comma delimited list of paths to recursively search","title":"Arguments"},{"location":"twig_unused/#options","text":"--format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Template (template), Compiled (compiled) [default: template,compiled ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"twig_unused/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"updatedb/","text":"updatedb \u00b6 Apply any database updates required (as with running update.php). Options \u00b6 --cache-clear[=CACHE-CLEAR] . Clear caches upon completion. [default: 1 ] --entity-updates . Run automatic entity schema updates at the end of any update hooks. Not supported in Drupal >= 8.7.0. --post-updates[=POST-UPDATES] . Run post updates after hook_update_n and entity updates. [default: 1 ] --no-cache-clear . Negate --cache-clear option. --no-post-updates . Negate --post-updates option. Aliases \u00b6 updb Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"updatedb"},{"location":"updatedb/#updatedb","text":"Apply any database updates required (as with running update.php).","title":"updatedb"},{"location":"updatedb/#options","text":"--cache-clear[=CACHE-CLEAR] . Clear caches upon completion. [default: 1 ] --entity-updates . Run automatic entity schema updates at the end of any update hooks. Not supported in Drupal >= 8.7.0. --post-updates[=POST-UPDATES] . Run post updates after hook_update_n and entity updates. [default: 1 ] --no-cache-clear . Negate --cache-clear option. --no-post-updates . Negate --post-updates option.","title":"Options"},{"location":"updatedb/#aliases","text":"updb Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"updatedb_status/","text":"updatedb:status \u00b6 List any pending database updates. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --entity-updates[=ENTITY-UPDATES] . Show entity schema updates. [default: 1 ] --post-updates[=POST-UPDATES] . Show post updates. [default: 1 ] --no-entity-updates . Negate --entity-updates option. --no-post-updates . Negate --post-updates option. --fields=FIELDS . Available fields: Module (module), Update ID (update_id), Description (description), Type (type) [default: module,update_id,type,description ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 updbst updatedb-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"updatedb:status"},{"location":"updatedb_status/#updatedbstatus","text":"List any pending database updates.","title":"updatedb:status"},{"location":"updatedb_status/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --entity-updates[=ENTITY-UPDATES] . Show entity schema updates. [default: 1 ] --post-updates[=POST-UPDATES] . Show post updates. [default: 1 ] --no-entity-updates . Negate --entity-updates option. --no-post-updates . Negate --post-updates option. --fields=FIELDS . Available fields: Module (module), Update ID (update_id), Description (description), Type (type) [default: module,update_id,type,description ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"updatedb_status/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"updatedb_status/#aliases","text":"updbst updatedb-status Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_block/","text":"user:block \u00b6 Block the specified user(s). Examples \u00b6 drush user:block user3 . Block the users whose name is user3 Arguments \u00b6 --names . A comma delimited list of user names. Aliases \u00b6 ublk user-block Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:block"},{"location":"user_block/#userblock","text":"Block the specified user(s).","title":"user:block"},{"location":"user_block/#examples","text":"drush user:block user3 . Block the users whose name is user3","title":"Examples"},{"location":"user_block/#arguments","text":"--names . A comma delimited list of user names.","title":"Arguments"},{"location":"user_block/#aliases","text":"ublk user-block Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_cancel/","text":"user:cancel \u00b6 Cancel user account(s) with the specified name(s). Examples \u00b6 drush user:cancel username . Cancel the user account with the name username and anonymize all content created by that user. drush user:cancel --delete-content username . Delete the user account with the name username and delete all content created by that user. Arguments \u00b6 --names . A comma delimited list of user names. Options \u00b6 --delete-content . Delete the user, and all content created by the user Aliases \u00b6 ucan user-cancel Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:cancel"},{"location":"user_cancel/#usercancel","text":"Cancel user account(s) with the specified name(s).","title":"user:cancel"},{"location":"user_cancel/#examples","text":"drush user:cancel username . Cancel the user account with the name username and anonymize all content created by that user. drush user:cancel --delete-content username . Delete the user account with the name username and delete all content created by that user.","title":"Examples"},{"location":"user_cancel/#arguments","text":"--names . A comma delimited list of user names.","title":"Arguments"},{"location":"user_cancel/#options","text":"--delete-content . Delete the user, and all content created by the user","title":"Options"},{"location":"user_cancel/#aliases","text":"ucan user-cancel Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_create/","text":"user:create \u00b6 Create a user account. Examples \u00b6 drush user:create newuser --mail=\" person@example.com \" --password=\"letmein\" . Create a new user account with the name newuser, the email address person@example.com , and the password letmein Arguments \u00b6 --name . The name of the account to add Options \u00b6 --password=PASSWORD . The password for the new account --mail=MAIL . The email address for the new account Aliases \u00b6 ucrt user-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:create"},{"location":"user_create/#usercreate","text":"Create a user account.","title":"user:create"},{"location":"user_create/#examples","text":"drush user:create newuser --mail=\" person@example.com \" --password=\"letmein\" . Create a new user account with the name newuser, the email address person@example.com , and the password letmein","title":"Examples"},{"location":"user_create/#arguments","text":"--name . The name of the account to add","title":"Arguments"},{"location":"user_create/#options","text":"--password=PASSWORD . The password for the new account --mail=MAIL . The email address for the new account","title":"Options"},{"location":"user_create/#aliases","text":"ucrt user-create Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_information/","text":"user:information \u00b6 Print information about the specified user(s). Examples \u00b6 drush user:information someguy,somegal . Display information about the someguy and somegal user accounts. drush user:information --mail= someguy@somegal.com . Display information for a given email account. drush user:information --uid=5 . Display information for a given user id. Arguments \u00b6 [--names] . A comma delimited list of user names. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --uid=UID . A comma delimited list of user ids to lookup (an alternative to names). --mail=MAIL . A comma delimited list of emails to lookup (an alternative to names). --fields=FIELDS . Available fields: User ID (uid), User name (name), Password (pass), User mail (mail), User theme (theme), Signature (signature), Signature format (signature_format), User created (user_created), Created (created), User last access (user_access), Last access (access), User last login (user_login), Last login (login), User status (user_status), Status (status), Time zone (timezone), User picture (picture), Initial user mail (init), User roles (roles), Group Audience (group_audience), Language code (langcode), Uuid (uuid) [default: uid,name,mail,roles,user_status ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 uinf user-information Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:information"},{"location":"user_information/#userinformation","text":"Print information about the specified user(s).","title":"user:information"},{"location":"user_information/#examples","text":"drush user:information someguy,somegal . Display information about the someguy and somegal user accounts. drush user:information --mail= someguy@somegal.com . Display information for a given email account. drush user:information --uid=5 . Display information for a given user id.","title":"Examples"},{"location":"user_information/#arguments","text":"[--names] . A comma delimited list of user names.","title":"Arguments"},{"location":"user_information/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --uid=UID . A comma delimited list of user ids to lookup (an alternative to names). --mail=MAIL . A comma delimited list of emails to lookup (an alternative to names). --fields=FIELDS . Available fields: User ID (uid), User name (name), Password (pass), User mail (mail), User theme (theme), Signature (signature), Signature format (signature_format), User created (user_created), Created (created), User last access (user_access), Last access (access), User last login (user_login), Last login (login), User status (user_status), Status (status), Time zone (timezone), User picture (picture), Initial user mail (init), User roles (roles), Group Audience (group_audience), Language code (langcode), Uuid (uuid) [default: uid,name,mail,roles,user_status ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"user_information/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"user_information/#aliases","text":"uinf user-information Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_login/","text":"user:login \u00b6 Display a one time login link for user ID 1, or another user. Examples \u00b6 drush user:login . Open default web browser and browse to homepage, logged in as uid=1. drush user:login --name=ryan node/add/blog . Open default web browser (if configured or detected) for a one-time login link for username ryan that redirects to node/add/blog. drush user:login --uid=123 . Open default web browser and login as user with uid \"123\". drush user:login --mail= foo@bar.com . Open default web browser and login as user with mail \" foo@bar.com \". drush user:login --browser=firefox --name=$(drush user:information --mail=\" drush@example.org \" --fields=name --format=string) . Open firefox web browser, and login as the user with the e-mail address drush@example.org . Arguments \u00b6 [--path] . Optional path to redirect to after logging in. Options \u00b6 --name[=NAME] . A user name to log in as. --uid[=UID] . A uid to log in as. --mail[=MAIL] . A user mail address to log in as. --browser[=BROWSER] . Optional value denotes which browser to use (defaults to operating system default). Use --no-browser to suppress opening a browser. [default: 1 ] --redirect-port=REDIRECT-PORT . A custom port for redirecting to (e.g., when running within a Vagrant environment) --no-browser . Negate --browser option. Aliases \u00b6 uli user-login Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:login"},{"location":"user_login/#userlogin","text":"Display a one time login link for user ID 1, or another user.","title":"user:login"},{"location":"user_login/#examples","text":"drush user:login . Open default web browser and browse to homepage, logged in as uid=1. drush user:login --name=ryan node/add/blog . Open default web browser (if configured or detected) for a one-time login link for username ryan that redirects to node/add/blog. drush user:login --uid=123 . Open default web browser and login as user with uid \"123\". drush user:login --mail= foo@bar.com . Open default web browser and login as user with mail \" foo@bar.com \". drush user:login --browser=firefox --name=$(drush user:information --mail=\" drush@example.org \" --fields=name --format=string) . Open firefox web browser, and login as the user with the e-mail address drush@example.org .","title":"Examples"},{"location":"user_login/#arguments","text":"[--path] . Optional path to redirect to after logging in.","title":"Arguments"},{"location":"user_login/#options","text":"--name[=NAME] . A user name to log in as. --uid[=UID] . A uid to log in as. --mail[=MAIL] . A user mail address to log in as. --browser[=BROWSER] . Optional value denotes which browser to use (defaults to operating system default). Use --no-browser to suppress opening a browser. [default: 1 ] --redirect-port=REDIRECT-PORT . A custom port for redirecting to (e.g., when running within a Vagrant environment) --no-browser . Negate --browser option.","title":"Options"},{"location":"user_login/#aliases","text":"uli user-login Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_password/","text":"user:password \u00b6 Set the password for the user account with the specified name. Examples \u00b6 drush user:password someuser \"correct horse battery staple\" . Set the password for the username someuser. See https://xkcd.com/936 Arguments \u00b6 --name . The name of the account to modify. --password . The new password for the account. Aliases \u00b6 upwd user-password Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:password"},{"location":"user_password/#userpassword","text":"Set the password for the user account with the specified name.","title":"user:password"},{"location":"user_password/#examples","text":"drush user:password someuser \"correct horse battery staple\" . Set the password for the username someuser. See https://xkcd.com/936","title":"Examples"},{"location":"user_password/#arguments","text":"--name . The name of the account to modify. --password . The new password for the account.","title":"Arguments"},{"location":"user_password/#aliases","text":"upwd user-password Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_role_add/","text":"user:role:add \u00b6 Add a role to the specified user accounts. Examples \u00b6 drush user-add-role \"power user\" user3 . Add the \"power user\" role to user3 Arguments \u00b6 --role . The name of the role to add. --names . A comma delimited list of user names. Aliases \u00b6 urol user-add-role Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:role:add"},{"location":"user_role_add/#userroleadd","text":"Add a role to the specified user accounts.","title":"user:role:add"},{"location":"user_role_add/#examples","text":"drush user-add-role \"power user\" user3 . Add the \"power user\" role to user3","title":"Examples"},{"location":"user_role_add/#arguments","text":"--role . The name of the role to add. --names . A comma delimited list of user names.","title":"Arguments"},{"location":"user_role_add/#aliases","text":"urol user-add-role Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_role_remove/","text":"user:role:remove \u00b6 Remove a role from the specified user accounts. Examples \u00b6 drush user:remove-role \"power user\" user3 . Remove the \"power user\" role from user3 Arguments \u00b6 --role . The name of the role to add --names . A comma delimited list of user names. Aliases \u00b6 urrol user-remove-role Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:role:remove"},{"location":"user_role_remove/#userroleremove","text":"Remove a role from the specified user accounts.","title":"user:role:remove"},{"location":"user_role_remove/#examples","text":"drush user:remove-role \"power user\" user3 . Remove the \"power user\" role from user3","title":"Examples"},{"location":"user_role_remove/#arguments","text":"--role . The name of the role to add --names . A comma delimited list of user names.","title":"Arguments"},{"location":"user_role_remove/#aliases","text":"urrol user-remove-role Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"user_unblock/","text":"user:unblock \u00b6 UnBlock the specified user(s). Examples \u00b6 drush user:unblock user3 . Unblock the users with name user3 Arguments \u00b6 --names . A comma delimited list of user names. Aliases \u00b6 uublk user-unblock Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"user:unblock"},{"location":"user_unblock/#userunblock","text":"UnBlock the specified user(s).","title":"user:unblock"},{"location":"user_unblock/#examples","text":"drush user:unblock user3 . Unblock the users with name user3","title":"Examples"},{"location":"user_unblock/#arguments","text":"--names . A comma delimited list of user names.","title":"Arguments"},{"location":"user_unblock/#aliases","text":"uublk user-unblock Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"version/","text":"version \u00b6 Show Drush version. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Drush version (drush-version) --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"version"},{"location":"version/#version","text":"Show Drush version.","title":"version"},{"location":"version/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Drush version (drush-version) --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"version/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters) Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Topics"},{"location":"views_analyze/","text":"views:analyze \u00b6 Get a list of all Views and analyze warnings. Options \u00b6 --format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Type (type), Message (message) --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 va views-analyze Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:analyze"},{"location":"views_analyze/#viewsanalyze","text":"Get a list of all Views and analyze warnings.","title":"views:analyze"},{"location":"views_analyze/#options","text":"--format=FORMAT . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Type (type), Message (message) --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"views_analyze/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"views_analyze/#aliases","text":"va views-analyze Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"views_dev/","text":"views:dev \u00b6 Set several Views settings to more developer-oriented values. Aliases \u00b6 vd views-dev Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:dev"},{"location":"views_dev/#viewsdev","text":"Set several Views settings to more developer-oriented values.","title":"views:dev"},{"location":"views_dev/#aliases","text":"vd views-dev Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"views_disable/","text":"views:disable \u00b6 Disable the specified views. Examples \u00b6 drush vdis frontpage taxonomy_term . Disable the frontpage and taxonomy_term views. Arguments \u00b6 --views . A comma delimited list of view names. Aliases \u00b6 vdis views-disable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:disable"},{"location":"views_disable/#viewsdisable","text":"Disable the specified views.","title":"views:disable"},{"location":"views_disable/#examples","text":"drush vdis frontpage taxonomy_term . Disable the frontpage and taxonomy_term views.","title":"Examples"},{"location":"views_disable/#arguments","text":"--views . A comma delimited list of view names.","title":"Arguments"},{"location":"views_disable/#aliases","text":"vdis views-disable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"views_enable/","text":"views:enable \u00b6 Enable the specified views. Examples \u00b6 drush ven frontpage,taxonomy_term . Enable the frontpage and taxonomy_term views. Arguments \u00b6 --views . A comma delimited list of view names. Aliases \u00b6 ven views-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:enable"},{"location":"views_enable/#viewsenable","text":"Enable the specified views.","title":"views:enable"},{"location":"views_enable/#examples","text":"drush ven frontpage,taxonomy_term . Enable the frontpage and taxonomy_term views.","title":"Examples"},{"location":"views_enable/#arguments","text":"--views . A comma delimited list of view names.","title":"Arguments"},{"location":"views_enable/#aliases","text":"ven views-enable Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"views_execute/","text":"views:execute \u00b6 Execute a view and show a count of the results, or the rendered HTML. Examples \u00b6 drush views:execute my_view . Show the rendered HTML for the default display for the my_view View. drush views:execute my_view page_1 3 --count . Show a count of my_view:page_1 where the first contextual filter value is 3. drush views:execute my_view page_1 3,foo . Show the rendered HTML of my_view:page_1 where the first two contextual filter values are 3 and 'foo' respectively. Arguments \u00b6 --view_name . The name of the view to execute. [--display] . The display ID to execute. If none specified, the default display will be used. [--view_args] . A comma delimited list of values, corresponding to contextual filters. Options \u00b6 --count[=COUNT] . Display a count of the results instead of each row. --show-admin-links . Show contextual admin links in the rendered markup. Aliases \u00b6 vex views-execute Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:execute"},{"location":"views_execute/#viewsexecute","text":"Execute a view and show a count of the results, or the rendered HTML.","title":"views:execute"},{"location":"views_execute/#examples","text":"drush views:execute my_view . Show the rendered HTML for the default display for the my_view View. drush views:execute my_view page_1 3 --count . Show a count of my_view:page_1 where the first contextual filter value is 3. drush views:execute my_view page_1 3,foo . Show the rendered HTML of my_view:page_1 where the first two contextual filter values are 3 and 'foo' respectively.","title":"Examples"},{"location":"views_execute/#arguments","text":"--view_name . The name of the view to execute. [--display] . The display ID to execute. If none specified, the default display will be used. [--view_args] . A comma delimited list of values, corresponding to contextual filters.","title":"Arguments"},{"location":"views_execute/#options","text":"--count[=COUNT] . Display a count of the results instead of each row. --show-admin-links . Show contextual admin links in the rendered markup.","title":"Options"},{"location":"views_execute/#aliases","text":"vex views-execute Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"views_list/","text":"views:list \u00b6 Get a list of all views in the system. Examples \u00b6 drush vl . Show a list of all available views. drush vl --name=blog . Show a list of views which names contain 'blog'. drush vl --tags=tag1,tag2 . Show a list of views tagged with 'tag1' or 'tag2'. drush vl --status=enabled . Show a list of enabled views. Options \u00b6 --name=NAME . A string contained in the view's name to filter the results with. --tags=TAGS . A comma-separated list of views tags by which to filter the results. --status=STATUS . Filter views by status. Choices: enabled, disabled. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Machine name (machine-name), Name (label), Description (description), Status (status), Tag (tag) [default: machine-name,label,description,status ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 vl views-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"views:list"},{"location":"views_list/#viewslist","text":"Get a list of all views in the system.","title":"views:list"},{"location":"views_list/#examples","text":"drush vl . Show a list of all available views. drush vl --name=blog . Show a list of views which names contain 'blog'. drush vl --tags=tag1,tag2 . Show a list of views tagged with 'tag1' or 'tag2'. drush vl --status=enabled . Show a list of enabled views.","title":"Examples"},{"location":"views_list/#options","text":"--name=NAME . A string contained in the view's name to filter the results with. --tags=TAGS . A comma-separated list of views tags by which to filter the results. --status=STATUS . Filter views by status. Choices: enabled, disabled. --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --fields=FIELDS . Available fields: Machine name (machine-name), Name (label), Description (description), Status (status), Tag (tag) [default: machine-name,label,description,status ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"views_list/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"views_list/#aliases","text":"vl views-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"watchdog_delete/","text":"watchdog:delete \u00b6 Delete watchdog log records. Examples \u00b6 drush watchdog:delete all . Delete all messages. drush watchdog:delete 64 . Delete messages with id 64. drush watchdog:delete \"cron run succesful\" . Delete messages containing the string \"cron run succesful\". drush watchdog:delete --severity=notice . Delete all messages with a severity of notice. drush watchdog:delete --type=cron . Delete all messages of type cron. Arguments \u00b6 [--substring] . Delete all log records with this text in the messages. Options \u00b6 --severity=SEVERITY . Delete messages of a given severity level. --type=TYPE . Delete messages of a given type. Aliases \u00b6 wd-del wd-delete wd watchdog-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"watchdog:delete"},{"location":"watchdog_delete/#watchdogdelete","text":"Delete watchdog log records.","title":"watchdog:delete"},{"location":"watchdog_delete/#examples","text":"drush watchdog:delete all . Delete all messages. drush watchdog:delete 64 . Delete messages with id 64. drush watchdog:delete \"cron run succesful\" . Delete messages containing the string \"cron run succesful\". drush watchdog:delete --severity=notice . Delete all messages with a severity of notice. drush watchdog:delete --type=cron . Delete all messages of type cron.","title":"Examples"},{"location":"watchdog_delete/#arguments","text":"[--substring] . Delete all log records with this text in the messages.","title":"Arguments"},{"location":"watchdog_delete/#options","text":"--severity=SEVERITY . Delete messages of a given severity level. --type=TYPE . Delete messages of a given type.","title":"Options"},{"location":"watchdog_delete/#aliases","text":"wd-del wd-delete wd watchdog-delete Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"watchdog_list/","text":"watchdog:list \u00b6 Interactively filter the watchdog message listing. Examples \u00b6 drush watchdog:list . Prompt for message type or severity, then run watchdog-show. Arguments \u00b6 [--substring] . A substring to look search in error messages. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --count[=COUNT] . The number of messages to show. [default: 10 ] --extended . Return extended information about each message. --severity[=SEVERITY] . Restrict to messages of a given severity level. --type[=TYPE] . Restrict to messages of a given type. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: wid,date,type,severity,message ] --field=FIELD . Select just one field, and force format to 'string'. Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 wd-list watchdog-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"watchdog:list"},{"location":"watchdog_list/#watchdoglist","text":"Interactively filter the watchdog message listing.","title":"watchdog:list"},{"location":"watchdog_list/#examples","text":"drush watchdog:list . Prompt for message type or severity, then run watchdog-show.","title":"Examples"},{"location":"watchdog_list/#arguments","text":"[--substring] . A substring to look search in error messages.","title":"Arguments"},{"location":"watchdog_list/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --count[=COUNT] . The number of messages to show. [default: 10 ] --extended . Return extended information about each message. --severity[=SEVERITY] . Restrict to messages of a given severity level. --type[=TYPE] . Restrict to messages of a given type. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: wid,date,type,severity,message ] --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"watchdog_list/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"watchdog_list/#aliases","text":"wd-list watchdog-list Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"watchdog_show-one/","text":"watchdog:show-one \u00b6 Show one log record by ID. Arguments \u00b6 --id . Watchdog Id Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'. Aliases \u00b6 wd-one watchdog-show-one Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"watchdog:show-one"},{"location":"watchdog_show-one/#watchdogshow-one","text":"Show one log record by ID.","title":"watchdog:show-one"},{"location":"watchdog_show-one/#arguments","text":"--id . Watchdog Id","title":"Arguments"},{"location":"watchdog_show-one/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,string,table,tsv,var_dump,var_export,xml,yaml [default: yaml ] --fields=FIELDS . Limit output to only the listed elements. Name top-level elements by key, e.g. \"--fields=name,date\", or use dot notation to select a nested element, e.g. \"--fields=a.b.c as example\". --field=FIELD . Select just one field, and force format to 'string'.","title":"Options"},{"location":"watchdog_show-one/#aliases","text":"wd-one watchdog-show-one Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"},{"location":"watchdog_show/","text":"watchdog:show \u00b6 Show watchdog messages. Examples \u00b6 drush watchdog:show . Show a listing of most recent 10 messages. drush watchdog:show \"cron run successful\" . Show a listing of most recent 10 messages containing the string \"cron run succesful\". drush watchdog:show --count=46 . Show a listing of most recent 46 messages. drush watchdog:show --severity=Notice . Show a listing of most recent 10 messages with a severity of notice. drush watchdog:show --type=php . Show a listing of most recent 10 messages of type php while sleep 2; do drush watchdog:show; done . Every 2 seconds, show the most recent 10 messages. Arguments \u00b6 [--substring] . A substring to look search in error messages. Options \u00b6 --format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --count[=COUNT] . The number of messages to show. [default: 10 ] --severity=SEVERITY . Restrict to messages of a given severity level. --type=TYPE . Restrict to messages of a given type. --extended . Return extended information about each message. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: wid,date,type,severity,message ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression Topics \u00b6 Output formatters and filters: control the command output (docs:output-formats-filters) Aliases \u00b6 wd-show ws watchdog-show Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"watchdog:show"},{"location":"watchdog_show/#watchdogshow","text":"Show watchdog messages.","title":"watchdog:show"},{"location":"watchdog_show/#examples","text":"drush watchdog:show . Show a listing of most recent 10 messages. drush watchdog:show \"cron run successful\" . Show a listing of most recent 10 messages containing the string \"cron run succesful\". drush watchdog:show --count=46 . Show a listing of most recent 46 messages. drush watchdog:show --severity=Notice . Show a listing of most recent 10 messages with a severity of notice. drush watchdog:show --type=php . Show a listing of most recent 10 messages of type php while sleep 2; do drush watchdog:show; done . Every 2 seconds, show the most recent 10 messages.","title":"Examples"},{"location":"watchdog_show/#arguments","text":"[--substring] . A substring to look search in error messages.","title":"Arguments"},{"location":"watchdog_show/#options","text":"--format[=FORMAT] . Format the result data. Available formats: csv,json,list,null,php,print-r,sections,string,table,tsv,var_dump,var_export,xml,yaml [default: table ] --count[=COUNT] . The number of messages to show. [default: 10 ] --severity=SEVERITY . Restrict to messages of a given severity level. --type=TYPE . Restrict to messages of a given type. --extended . Return extended information about each message. --fields=FIELDS . Available fields: ID (wid), Type (type), Message (message), Severity (severity), Location (location), Hostname (hostname), Date (date), Username (username) [default: wid,date,type,severity,message ] --field=FIELD . Select just one field, and force format to 'string'. --filter[=FILTER] . Filter output based on provided expression","title":"Options"},{"location":"watchdog_show/#topics","text":"Output formatters and filters: control the command output (docs:output-formats-filters)","title":"Topics"},{"location":"watchdog_show/#aliases","text":"wd-show ws watchdog-show Legend An argument or option with square brackets is optional. Any default value is listed at end of arg/option description. An ellipsis indicates that an argument accepts multiple values separated by a space.","title":"Aliases"}]}